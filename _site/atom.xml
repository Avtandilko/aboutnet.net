<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>AboutNet</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2018-06-20T18:05:40-04:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Kubernetes Prometheus Operator</title>
   <link href="http://localhost:4000/kubernetes-prometheus-operator"/>
   <updated>2018-06-19T00:00:00-04:00</updated>
   <id>http://localhost:4000/kubernetes-prometheus-operator</id>
   <content type="html">&lt;h2 id=&quot;содержание&quot;&gt;Содержание&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/kubernetes-prometheus-operator#установка(helm)&quot;&gt;Установка (helm)&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;/kubernetes-prometheus-operator#предварительные-изменения&quot;&gt;Предварительные изменения&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/kubernetes-prometheus-operator#установка&quot;&gt;Установка&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/kubernetes-prometheus-operator#примеры-использования&quot;&gt;Примеры использования&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;/kubernetes-prometheus-operator#добавление-своего-dashboard-в-grafana&quot;&gt;Добавление своего dashboard в Grafana&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/kubernetes-prometheus-operator#добавление-custom-alerts&quot;&gt;Добавление custom alerts&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/kubernetes-prometheus-operator#persistent-storage&quot;&gt;Persistent storage&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/kubernetes-prometheus-operator#добавление-custom-alerts&quot;&gt;Отправка уведомлений&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/kubernetes-prometheus-operator#добавление-custom-alerts&quot;&gt;Ingress&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/kubernetes-prometheus-operator#мониторинг-сервисов-внутри-pod&quot;&gt;Мониторинг сервисов внутри pod&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;/kubernetes-prometheus-operator#описание&quot;&gt;Описание&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/kubernetes-prometheus-operator#конфигурации&quot;&gt;Конфигурации&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;В данной статье описано, как установить, обеспечить работоспособность и настроить Prometheus Operator в кластере GCE. Большая часть статьи применима независимо от места развертывания кластера k8s.&lt;/p&gt;

&lt;p&gt;Следует учитывать, что статья написана в процессе ознакомления с Kubernetes и мониторингом кластера, поэтому многие инструкции могут быть неоптимальными, несовместимыми с использованием в production, либо просто некорретными. 
&lt;!---excerpt-break--&gt;&lt;/p&gt;
&lt;h2 id=&quot;установка-helm-&quot;&gt;Установка (helm) &lt;a name=&quot;установка(helm)&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;предварительные-изменения-&quot;&gt;Предварительные изменения &lt;a name=&quot;предварительные-изменения&quot;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;1) Отключение ssl для сбора метрик kubelet:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https: false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;2) Изменение порта и url для получения метрик cadvisor:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  - port: http-metrics
    interval: 15s
  - port: http-metrics
    path: /metrics/cadvisor
    interval: 30s
    honorLabels: true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;3) Изменение репозитория helm для установки kube-prometheus на локальный:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sed -ie 's/    repository/#    repository/g' helm/kube-prometheus/requirements.yaml
sed -ie 's/#e2e-repository/repository/g' helm/kube-prometheus/requirements.yaml
helm dependency update helm/kube-prometheus/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;4) Изменение datasource в Grafana на корректный:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;prometheus-datasource.json: |+
  {
    &quot;access&quot;: &quot;proxy&quot;,
    &quot;basicAuth&quot;: false,
    &quot;name&quot;: &quot;prometheus&quot;,
    &quot;type&quot;: &quot;prometheus&quot;,
    &quot;url&quot;: &quot;http://prometheus:9090&quot;
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;5) Подключение alertmanager к prometheus:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alertingEndpoints:
   - name: alertmanager
     namespace: monitoring
     port: http
     scheme: http
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;установка-&quot;&gt;Установка &lt;a name=&quot;установка&quot;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/coreos/prometheus-operator.git &amp;amp;&amp;amp; cd prometheus-operator

helm install --name prometheus-operator --set rbacEnable=true --namespace=monitoring helm/prometheus-operator --tls
helm install --name prometheus --set serviceMonitorsSelector.app=prometheus --set ruleSelector.app=prometheus --namespace=monitoring helm/prometheus --tls
helm install --name alertmanager --namespace=monitoring helm/alertmanager --tls
helm install --name grafana --namespace=monitoring helm/grafana --tls
helm install --name kube-prometheus --namespace=monitoring helm/kube-prometheus --tls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;примеры-использования-&quot;&gt;Примеры использования &lt;a name=&quot;примеры-использования&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;добавление-своего-dashboard-в-grafana-&quot;&gt;Добавление своего dashboard в Grafana &lt;a name=&quot;добавление-своего-dashboard-в-grafana&quot;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Существует несколько способов добавления dashboard в Grafana. Более правильный описан в документации (helm/grafana/README.md) и подразумевает создание отдельного ConfigMap и вынос custom dashboard’ов в отдельную директорию.&lt;/p&gt;

&lt;p&gt;Более простой способ - скопировать json файл с dashboard, импортированный из Grafana, в директорию helm/grafana/dashboards, обернув его в следующий код (необходимо для работы Grafana Watcher):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;dashboard&quot;:
&amp;lt;-- initial code --&amp;gt;,
      &quot;inputs&quot;: [
        {
            &quot;name&quot;: &quot;DS_PROMETHEUS&quot;,
            &quot;pluginId&quot;: &quot;prometheus&quot;,
            &quot;type&quot;: &quot;datasource&quot;,
            &quot;value&quot;: &quot;prometheus&quot;
        }
    ],
    &quot;overwrite&quot;: true
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;добавление-custom-alerts-&quot;&gt;Добавление custom alerts &lt;a name=&quot;добавление-custom-alerts&quot;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Существует несколько способов добавления оповещений. Также в репозиторий включен набор преднастроенных оповещений (contrib/kube-prometheus/manifests/prometheus-rules.yaml)&lt;/p&gt;

&lt;p&gt;Для того, чтобы включились встроенные оповещения, необходимо сделать следующие вещи:&lt;/p&gt;

&lt;p&gt;1) Корректно выставить labels в манифесте, содержащем правила, для того, чтобы подпадать под ruleSelector:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;metadata:
  labels:
    prometheus: prometheus
    role: alert-rules
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;2) Применить манифест:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl apply -n monitoring -f contrib/kube-prometheus/manifests/prometheus-rules.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3) Возможно отредактировать конфигурацию самого ruleSelector:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ruleSelector:
    matchLabels:
      role: alert-rules
      prometheus: prometheus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;4) Обновить конфигурацию prometheus:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;helm upgrade prometheus helm/prometheus --tls  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Существует другой, более простой способ:&lt;/p&gt;

&lt;p&gt;1) Переопределить в values.yml ruleSelector, например:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rulesSelector: {
  matchLabels: {
	role: alert-rules
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;2) Обновить конфигурацию prometheus:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;helm upgrade prometheus helm/prometheus --tls  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Соответственно, для того, чтобы заработало свое правило оповещения, необходимо создать манифест следующего вида и применить его:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    role: alert-rules
  name: custom-prometheus-rules
  namespace: monitoring
spec:
  groups:
  - name: custom.rules
    rules:
&amp;lt;-- rules --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Пример правила оповещения:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    role: alert-rules
  name: custom-prometheus-rules
  namespace: monitoring
spec:
  groups:
  - name: custom.rules
    rules:
    - alert: KubernetesTooManyRunningPods
      annotations:
        message: &quot;Too many running pods on the node `}}.&quot;
      expr: |
        kubelet_running_pod_count &amp;gt; 15
      for: 1m
      labels:
        severity: warning
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Пример добавления правила оповещения:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl apply -n monitoring -f custom/prometheus-rules/custom-prometheus-rules.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;persistent-storage-&quot;&gt;Persistent storage &lt;a name=&quot;persistent-storage&quot;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Рассматривается развертывание с использование своего StorageClass prometheus-ssd-sc (одна зона, ssd, отсутствие репликации).
Манифест для storageClass:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: prometheus-ssd-sc
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd
  zone: europe-west3-a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Для того, чтобы подключить данный sc в prometheus, необходимо раскомментировать и заполнить секцию storageSpec в файле values.yaml:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;storageSpec:
  volumeClaimTemplate:
    spec:
      selector:
        matchLabels:
          namespace: monitoring
      accessModes: [ &quot;ReadWriteOnce&quot; ]
      storageClassName: prometheus-ssd-sc
      resources:
        requests:
          storage: 2Gi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Работа pv проверена путем удаления prometheus helm release и его последующей установкой. Данные из pv при этом не теряются.&lt;/p&gt;

&lt;p&gt;Время хранения метрик задается в файле /helm/prometheus/values.yaml в переменной retention. По умолчанию prometheus хранит метрики 24 часа.&lt;/p&gt;

&lt;p&gt;Пример графика потребления RAM, разделенного по pod (в период отсутствия метрик helm release prometheus был полностью удален из k8s):
&lt;img src=&quot;public/kubernetes-prometheus-operator-img0.png&quot; alt=&quot;kubernetes-prometheus-operator-img0&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;отправка-уведомлений-&quot;&gt;Отправка уведомлений &lt;a name=&quot;отправка-уведомлений&quot;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Для отправки уведомлений (в примере - отправка на почту), необходимо привести конфигурацию values.yaml к аналогичному виду:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;config:
  global:
    resolve_timeout: 5m
    smtp_smarthost: &amp;lt;smtp-server&amp;gt;
    smtp_from: &amp;lt;smtp-from&amp;gt;
    smtp_auth_username: &amp;lt;smtp-username&amp;gt;
    smtp_auth_password: &amp;lt;smtp-password&amp;gt;
  route:
    group_by: ['job']
    group_wait: 30s
    group_interval: 5m
    repeat_interval: 12h
    receiver: &amp;lt;receiver-name&amp;gt;
  receivers:
  - name: &amp;lt;receiver-name&amp;gt;
    email_configs:
      - to: &amp;lt;target@e-mail.address&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;ingress-&quot;&gt;Ingress &lt;a name=&quot;ingress&quot;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Типовой Ingress для любого сервиса настраивается в файле values.yaml данного сервиса. На примере grafana:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ingress:
  enabled: true
  hosts: 
    - grafana.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;мониторинг-сервисов-внутри-pod-&quot;&gt;Мониторинг сервисов внутри pod &lt;a name=&quot;мониторинг-сервисов-внутри-pod&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;описание-&quot;&gt;Описание &lt;a name=&quot;описание&quot;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Задача - получать в prometheus метрики с exporters, запущенных внутри pod. При изменениях prometheus должен автоматически узнавать о них.&lt;/p&gt;

&lt;p&gt;Для демонстрации в namespace custom-ns создан deployment из двух pod с prometheus node-exporter.&lt;/p&gt;

&lt;p&gt;Решается задача при помощи двух сущностей.&lt;/p&gt;

&lt;p&gt;1) Service - связывает конфигурацию pod и ServiceMonitor;&lt;/p&gt;

&lt;p&gt;2) ServiceMonitor - связывает конфигурацию Service и prometheus.&lt;/p&gt;

&lt;p&gt;После настройки данных сущностей, для любого сервиса, находящегося в namespace custom-ns и имеющего метку custom-node-exporter, prometheus будет пытаться забрать метрики с порта 9100 (node-exporter)/&lt;/p&gt;

&lt;p&gt;Пример targets в prometheus:
&lt;img src=&quot;public/kubernetes-prometheus-operator-img1.png&quot; alt=&quot;kubernetes-prometheus-operator-img1&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;конфигурации-&quot;&gt;Конфигурации &lt;a name=&quot;конфигурации&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  name: custom-node-exporter-deployment
spec:
  selector:
    matchLabels:
      app: custom-node-exporter
  replicas: 2
  template:
    metadata:
      labels:
        app: custom-node-exporter
    spec:
      containers:
      - name: node-exporter
        image: prom/node-exporter
        ports:
        - containerPort: 9100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: custom-servicemonitor
  labels:
    app: custom-node-exporter
    prometheus: kube-prometheus
spec:
  selector:
    matchLabels:
      app: custom-node-exporter
  namespaceSelector:
    matchNames:
      - custom-ns
  endpoints:
  - port: custom-metrics
    path: /metrics
    interval: 10s
    honorLabels: true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: v1
kind: Service
metadata:
  name: custom-service
  labels:
    app: custom-node-exporter
spec:
  selector:
    app: custom-node-exporter
  ports:
  - name: custom-metrics
    protocol: TCP
    port: 9100
    targetPort: 9100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Prometheus interfaces exporter</title>
   <link href="http://localhost:4000/prom-interfaces-exporter"/>
   <updated>2018-04-01T00:00:00-04:00</updated>
   <id>http://localhost:4000/prom-interfaces-exporter</id>
   <content type="html">&lt;p&gt;Для обучающих и тестовых целей я написал exporter для Prometheus, который возвращает состояние сетевых интерфейсов хоста.
Данный exporter может быть запущен как в Docker контейнере, так и непосредственно на самом хосте.&lt;/p&gt;

&lt;p&gt;Исходный код на &lt;a href=&quot;https://github.com/Avtandilko/prom-interfaces-exporter&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;!---excerpt-break--&gt;

&lt;p&gt;Краткое описание работы Python скрипта, лежащего в основе exporter:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;На порту 9425 (порт взят &lt;a href=&quot;https://github.com/prometheus/prometheus/wiki/Default-port-allocations&quot;&gt;отсюда&lt;/a&gt;) запускается экземпляр класса &lt;code class=&quot;highlighter-rouge&quot;&gt;CustomHttpProcessor&lt;/code&gt;, который при каждом обращении к нему вызывает функцию &lt;code class=&quot;highlighter-rouge&quot;&gt;write_interface_status&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Функция &lt;code class=&quot;highlighter-rouge&quot;&gt;write_interface_status&lt;/code&gt;, в свою очередь, вызывает еще несколько функций, которые:
    &lt;ul&gt;
      &lt;li&gt;получают список имен интерфейсов в системе;&lt;/li&gt;
      &lt;li&gt;проверяют текущее состояние (&lt;code class=&quot;highlighter-rouge&quot;&gt;operstate&lt;/code&gt;) каждого из полученных интерфейсов;&lt;/li&gt;
      &lt;li&gt;записывают состояние в файл &lt;code class=&quot;highlighter-rouge&quot;&gt;metrics&lt;/code&gt;, который отдается по http.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Необходимое условие для работы в Docker контейнере - директория &lt;code class=&quot;highlighter-rouge&quot;&gt;/sys&lt;/code&gt; должна быть подмонтирована в контейнер в &lt;code class=&quot;highlighter-rouge&quot;&gt;/host/sys&lt;/code&gt; для того, чтобы скрипт в контейнере мог считать метрики хоста.&lt;/p&gt;

&lt;p&gt;Пример команды для запуска exporter в Docker контейнере:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d -p 9425:9425 -v /sys:/host/sys:ro --name prom-interfaces-exporter avtandilko/prom-interfaces-exporter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Пример вывода exporter:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl 172.31.0.11:9425/metrics
# HELP interface_status down = 0, up = 1, any other states (unknown) = 2
# TYPE interface_status untyped
interface_status{interface=&quot;br-af9ffbaf4aff&quot;} 0
interface_status{interface=&quot;dm-8295e7c648f8&quot;} 2
interface_status{interface=&quot;dm-b880f00a8833&quot;} 2
interface_status{interface=&quot;docker0&quot;} 1
interface_status{interface=&quot;dummy0&quot;} 0
interface_status{interface=&quot;eth0&quot;} 1
interface_status{interface=&quot;eth1&quot;} 1
interface_status{interface=&quot;lo&quot;} 2
interface_status{interface=&quot;veth1f58e81&quot;} 1
interface_status{interface=&quot;vethb244e2b&quot;} 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Basics Of PostgreSQL</title>
   <link href="http://localhost:4000/basics-of-postgresql"/>
   <updated>2018-02-16T00:00:00-05:00</updated>
   <id>http://localhost:4000/basics-of-postgresql</id>
   <content type="html">&lt;p&gt;Часть “Архитектура PostgreSQL” является конспектом &lt;a href=&quot;https://www.youtube.com/playlist?list=PLaFqU3KCWw6KzGwUubZm-9-vKsi6vh5qC&quot;&gt;лекций Postgres Professional&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;архитектура-postgresql&quot;&gt;Архитектура PostgreSQL&lt;/h1&gt;

&lt;p&gt;Изначально при старте PostgreSQL запускается процесс postmaster. Он:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Создает структуры в памяти, которые будут использоваться другими процессами;&lt;/li&gt;
  &lt;li&gt;Создает все остальные процессы (fork) и управляет ими (перезапуск и т.д.);&lt;/li&gt;
  &lt;li&gt;Слушает входящие соединения и на каждого клиента создает отдельный серверный процесс postgres.&lt;/li&gt;
&lt;/ol&gt;

&lt;!---excerpt-break--&gt;

&lt;h2 id=&quot;организация-данных&quot;&gt;Организация данных&lt;/h2&gt;
&lt;p&gt;Совокупность баз данных называется кластером.
С точки зрения физической организации, данные хранятся в табличных пространствах (каталогах в файловой системе).&lt;/p&gt;

&lt;h3 id=&quot;массив-буферов&quot;&gt;Массив буферов&lt;/h3&gt;
&lt;p&gt;Часто используемые страницы остаются в буферном кэше, редко используемые заменяются.
Страницы записываются на диск время от времени (процесс background writer). Иногда серверный процесс также может инициировать запись данных на диск.&lt;/p&gt;

&lt;h2 id=&quot;транзакции&quot;&gt;Транзакции&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Атомарность - либо выполняются все изменения, либо ни одно из них;&lt;/li&gt;
  &lt;li&gt;Согласованность (целостность данных) - система переходит из одного целостного состояния в другое;&lt;/li&gt;
  &lt;li&gt;Изоляция - на результат не должны оказывать влияния другие транзакции. Postgres поддерживает 3 уровня изоляции из 4 (commit не поддерживается);&lt;/li&gt;
  &lt;li&gt;Долговечность - зафиксированные изменения не теряются (подробнее в секции про WAL).&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;журнал-write-ahead-log&quot;&gt;Журнал (Write Ahead Log)&lt;/h3&gt;

&lt;p&gt;Общая идея - при выполнении любых изменений в журнал записывается информация, достаточная для повторения данных изменений. Данная информация должна попасть на диск раньше, чем запишутся сами изменения (процесс wal writer). 
При пропадании из буфера данных, которые не успели записаться на диск (перезагрузка и т.д.) они восстанавливаются из WAL. Информация записывается в файлы по 16 МБ по умолчанию (возможна архивация старых файлов процессом wal archiver). 
Возможна синхронная (надежно), либо асинхронная (быстро) запись.&lt;/p&gt;

&lt;p&gt;Также используется процесс checkpointer для принудительного периодического сброса всей информации из буферов на диск. После прохождения контрольной точки журналы, которые были записаны до этого, теряют актуальность.&lt;/p&gt;

&lt;h2 id=&quot;многоверсионность-mvcc&quot;&gt;Многоверсионность (MVCC)&lt;/h2&gt;
&lt;p&gt;Каждая транзакция работает со снимком (snapshot).
На нижнем уровне, когда в таблицу вставляется/удаляется строка, в ней отмечается номер транзакции, которая создала/удалила данную строку.&lt;/p&gt;

&lt;p&gt;Периодически (либо вручную) запускается процесс vacuum, который очищает версии строк, недоступные более ни в одном снимке.&lt;/p&gt;

&lt;h1 id=&quot;базовая-настройка-потоковой-репликации&quot;&gt;Базовая настройка потоковой репликации&lt;/h1&gt;
&lt;p&gt;Шпаргалка по мотивам &lt;a href=&quot;https://eax.me/postgresql-replication/&quot;&gt;https://eax.me/postgresql-replication/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Вкратце - потоковая репликация в PostgreSQL это передача WAL от мастера к репликам. Работает только в пределах одной архитектуры, а также одной версии PostgreSQL.&lt;/p&gt;

&lt;p&gt;Настройка репликации от имени пользователя postgres (ограничения доступа по IP отсутствуют) производится следующим образом&lt;/p&gt;

&lt;h2 id=&quot;master&quot;&gt;Master&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pg_hba.conf
host    replication      postgres       0.0.0.0/0           md5
host    all              postgres       0.0.0.0/0           md5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;postgresql.conf
listen_addresses = '*'
wal_level = hot_standby
wal_log_hints = on
max_wal_senders = 8
wal_keep_segments = 64
hot_standby = on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;slave&quot;&gt;Slave&lt;/h2&gt;

&lt;p&gt;Для выполнения следующего действия необходимо, чтобы директория с БД (в примере main) была пустой. Будет целесообразно сделать резервную копию предыдущего содержимого, либо параллельно изменить данную директорию в postgresql.conf (data_directory). Действие выполняется при остановленном процессе PostgreSQL.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pg_basebackup -P -R -X stream -c fast -h master_ip -U postgres -D ./main&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;После этого БД будет скопирована на slave, также будет создан файл recovery.conf, описывающий параметры репликации.&lt;/p&gt;

&lt;p&gt;pg_hba.cong и postgresql.conf требуется отредактировать аналогично файлам на master.&lt;/p&gt;

&lt;p&gt;Далее можно запустить PostgreSQL на slave и убедиться, что репликация запустилась, с использованием следующего запроса на master:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM pg_stat_replication;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Следует отметить, что читать можно как с master, так и со slave (по крайней мере в данном примере), но писать, по понятным причинам, можно только в master.&lt;/p&gt;

&lt;p&gt;Самый простой способ превратить slave в standalone ноду (например, при миграции БД между серверами) - удалить файл recovery.conf и перезапустить PostgreSQL.&lt;/p&gt;

&lt;h1 id=&quot;pgbouncer&quot;&gt;PgBouncer&lt;/h1&gt;

&lt;p&gt;Утилита, созданная для проксирования соединений к PostgreSQL (для каждого соединения по умолчанию создается отдельный процесс). PgBouncer объединяет некоторое количество соединений клиентов в пул и тратит только одно соединение сервера на их обработку.&lt;/p&gt;

&lt;p&gt;Базовая конфигурация (без учета требований к безопасности):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pgbouncer.ini
[databases]
* = host=localhost port=5432
postgres = dbname=postgres
auth_type = trust
admin_users = postgres

[pgbouncer]
listen_addr = *
listen_port = 6432
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;userlist.txt 
&quot;postgres&quot; &quot;postgres&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Простейший CD с использованием TeamCity, Docker и Ansible</title>
   <link href="http://localhost:4000/simple-cd-with-teamcity-docker-ansible"/>
   <updated>2018-01-28T00:00:00-05:00</updated>
   <id>http://localhost:4000/simple-cd-with-teamcity-docker-ansible</id>
   <content type="html">&lt;p&gt;На данном примере я первый раз познакомился с TeamCity и создал нечто похожее на настоящий CD (Continious Deployment).
Все используемые в примере файлы можно найти по данной &lt;a href=&quot;https://github.com/Avtandilko/Python-CD&quot;&gt;ссылке&lt;/a&gt;.&lt;/p&gt;

&lt;!---excerpt-break--&gt;
&lt;p&gt;Начнем с задачи:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Есть примитивное приложение, написанное на Python, которое слушает порт 8080 и в ответ возвращает строку “It Works”;&lt;/li&gt;
  &lt;li&gt;Необходимо распространять данное приложение на определенную группу хостов (в примере - localhost) в виде Docker контейнера.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Структура CD следующая:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;В локальном репозитории создается приложение с названием python-listener.py;&lt;/li&gt;
  &lt;li&gt;Данный код собирается в Docker контейнер при помощи Dockerfile (также находится в репозитории);&lt;/li&gt;
  &lt;li&gt;В том же репозитории создан Ansible playbook для распространения Docker контейнера;&lt;/li&gt;
  &lt;li&gt;После всех произведенных в коде изменений требуется сделать git push origin master для публикации изменений в мастер ветку на GitHub;&lt;/li&gt;
  &lt;li&gt;Для сборки контейнера на агенте и его распространения на необходимые серверы (в примере - localhost) используется TeamCity, который запускает Ansible playbook.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Шаги по установке TeamCity и его агента в Docker контейнер пропущены, как не требующие особых пояснений. В качестве БД для TeamCity я использовал PostgreSQL, запущенную в Docker контейнере на том же хосте.&lt;/p&gt;

&lt;p&gt;Описание приложения на Python можно посмотреть &lt;a href=&quot;https://aboutnet.net/making-deb-packet-from-Python-file&quot;&gt;здесь&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dockerfile, при помощи которого собирается контейнер имеет следующий вид:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM alpine:latest
RUN mkdir /etc/python-listener
RUN apk update
RUN apk add python
ADD ./src/default.conf /etc/python-listener/
ADD ./src/python-listener.py /etc/python-listener/
CMD [&quot;python&quot;, &quot;/etc/python-listener/python-listener.py&quot;]
EXPOSE 8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Данный Dockerfile при сборке образа описывает следующее:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;В качестве базового образа используется легковесный дистрибутив Alpine последней доступной версии;&lt;/li&gt;
  &lt;li&gt;Создается директория /etc/python-listener, в которой будут находиться файлы приложения;&lt;/li&gt;
  &lt;li&gt;Устанавливается python2;&lt;/li&gt;
  &lt;li&gt;С хоста, на котором собирается образ (либо из Git), копируются файл default.conf и код приложения python-listener.py;&lt;/li&gt;
  &lt;li&gt;Приложение запускается;&lt;/li&gt;
  &lt;li&gt;Контейнер слушает порт 8080 (для того, чтобы данный порт был доступен снаружи, при создании контейнера необходимо использовать ключ -p x:8080).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Следующая ступень - Ansible playbook, который распространяет образ. 
В роли playbook следует отметить следующий момент - используется библиотека docker-py, которая устанавливается в Python virtual environment для того, чтобы случайно не сломать Python на хостах, где происходит поднятие контейнера (метод подсмотрен у коллег). В остальном, playbook использует модуль Ansible docker_container, который описан в документации.&lt;/p&gt;

&lt;p&gt;То, ради чего написана эта статья - работа с TeamCity. Стоит учитывать, что на момент написания статьи, автор имеет около часа опыта работы с TeamCity, поэтому используемые методы, вероятно, очень далеки от совершенства (два из трех этапов сборки используют shell).&lt;/p&gt;

&lt;p&gt;Логика следующая:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Добавляется новый проект Python-CD;&lt;/li&gt;
  &lt;li&gt;В проекте в VCS (Version Control Settings) указывается GitHub репозиторий;&lt;/li&gt;
  &lt;li&gt;Создаются три шага сборки:
    &lt;ul&gt;
      &lt;li&gt;Docker build на TeamCity агенте (он был предложен автоматически и заработал без применения каких-либо дополнительных настроек);&lt;/li&gt;
      &lt;li&gt;Push образа с TeamCity агента в Docker Hub (используется command line: &lt;code class=&quot;highlighter-rouge&quot;&gt;docker login -u avtandilko -p ***** &amp;amp;&amp;amp; docker push avtandilko/python-listener&lt;/code&gt;);&lt;/li&gt;
      &lt;li&gt;Deploy образа из Docker Hub с использованием ssh exec (запуск playbook на указанном хосте командой&lt;code class=&quot;highlighter-rouge&quot;&gt;ansible-playbook /opt/python-listener/deploy-python-listener-container.yml -i hosts&lt;/code&gt;).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Таким образом, после редактирования кода приложения и его push в GitHub достаточно нажать на одну кнопку для того, чтобы контейнер с приложением распространился на все необходимые хосты. При этом, если какой-то шаг окажется неудачным (например, сборка образа) дальнейшие шаги выполняться не будут.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Understanding and Deploying Cisco SD-WAN (BRKRST-2767)</title>
   <link href="http://localhost:4000/understanding-and-deploying-cisco-sd-wan"/>
   <updated>2017-12-28T00:00:00-05:00</updated>
   <id>http://localhost:4000/understanding-and-deploying-cisco-sd-wan</id>
   <content type="html">&lt;h2 id=&quot;device-roles&quot;&gt;Device roles&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;vManage - interface for login to the system, configure, monitor and troubleshoot it;&lt;/li&gt;
  &lt;li&gt;vSmart Controllers - brains of the operation. Policies configured on vManage pushed down to vSmart Controllers;&lt;/li&gt;
  &lt;li&gt;vBond - tool for ZTP, it instruct routers how to join the network;&lt;/li&gt;
  &lt;li&gt;On-Site routers (&lt;a href=&quot;http://viptela.com/vedge-cloud-datasheet/&quot;&gt;vEdge&lt;/a&gt; or Cisco ASR/ISR 1k/4k in 2018).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;concepts&quot;&gt;Concepts&lt;/h2&gt;
&lt;p&gt;Overlay Management Protocol (OMP) - TCP based control protocol, creates a peering relationships between vEdge routers and vSmart Controllers over the TLS/DTLS tunnels and used to exchange policies and routes.&lt;/p&gt;

&lt;p&gt;At the same time BFD used to provide health checks of the network (DSCP CS6 now and different DSCP values to simulate specific protocols in future implementations).&lt;/p&gt;

&lt;p&gt;Transport Locators (TLOCs) - identifiers of vEdge routers and vSmart Controllers.&lt;/p&gt;

&lt;!---excerpt-break--&gt;

&lt;h2 id=&quot;fabric-operation-walk-through&quot;&gt;Fabric Operation Walk-Through&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;TLS/DTLS tunnels created between vEdge routers and vSmart Controllers;&lt;/li&gt;
  &lt;li&gt;vEdge routers discover other vEdge routers TLOCs via OMP;&lt;/li&gt;
  &lt;li&gt;vEdge routers build IPSec tunnels with BFD to other vEdge routers;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;zero-touch-provisioning&quot;&gt;Zero Touch Provisioning&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;vEdge router boots up and send query to ztp.viptela.com;&lt;/li&gt;
  &lt;li&gt;ztp.viptela.com redirects vEdge to corporate orchestartor (vBond);&lt;/li&gt;
  &lt;li&gt;vEdge establishes a connection with vBond, downloads initial configuration from vManage and registered on it;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;useful-links&quot;&gt;Useful Links&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ciscolive.com/global/on-demand-library/?search=viptela#/session/15064839297820012EYM&quot;&gt;Cisco Live Presentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dcloud-cms.cisco.com/demo/4d-viptela-v1&quot;&gt;Cisco dCloud Demo “Cisco 4D SD-WAN (Viptela) v1”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://viptela.com/sd-wan/&quot;&gt;Viptela official site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>NetBox and Oxidized integration</title>
   <link href="http://localhost:4000/netbox-and-oxidized-integration"/>
   <updated>2017-12-27T00:00:00-05:00</updated>
   <id>http://localhost:4000/netbox-and-oxidized-integration</id>
   <content type="html">&lt;p&gt;In our company we use &lt;a href=&quot;https://github.com/digitalocean/netbox&quot;&gt;NetBox&lt;/a&gt; to manage devices information, such as IP addresses, serial numbers, etc., &lt;a href=&quot;https://github.com/ytti/oxidized&quot;&gt;Oxidized&lt;/a&gt;/GitLab to store device configuration files, Zabbix to monitor everything and Confluence for any other documentation.&lt;/p&gt;

&lt;p&gt;Earlier, when we connected a new device to the network, we needed to manually add it at least to the listed systems.&lt;/p&gt;

&lt;p&gt;Fortunately, NetBox has an excellent API (this was one of the criteria by which I chose him), that allows us to automate some routine.&lt;/p&gt;

&lt;!---excerpt-break--&gt;

&lt;p&gt;First we grouped all our devices according to their roles. For example, for data center devices it looks like this:
&lt;img src=&quot;public/netbox-and-oxidized-integration1.png&quot; alt=&quot;netbox-and-oxidized-integration1&quot; width=&quot;50%&quot; /&gt;
For all devices at least the following fields must be filled in:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Primary IPv4&lt;/strong&gt; (for ssh to device);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Platform&lt;/strong&gt; (to use correct library in Oxidized);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; (we need to store configuration files only from the Active devices);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Custom Field: Authorization Type&lt;/strong&gt; (some of devices have only local credentials and can not be managed with TACACS+);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Custom Field: Web Only&lt;/strong&gt; (some of devices are managed only through the web interface).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then I wrote my own &lt;a href=&quot;https://github.com/Avtandilko/NetBoxPython/blob/master/NetBoxPython.py&quot;&gt;python library&lt;/a&gt; to work with the NetBox API (mainly for education purposes).&lt;/p&gt;

&lt;p&gt;To export devices inventory from NetBox I also wrote the &lt;a href=&quot;https://github.com/Avtandilko/NetBoxPython/blob/master/NetBoxToOxidizedExport.py&quot;&gt;separate script&lt;/a&gt;.
It filters out unsuitable device types (for example, Cisco FEX, which managed from the N5k core switches, or APC UPS) and forms two files:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Inventory file in CSV format;&lt;/li&gt;
  &lt;li&gt;/etc/hosts file to locally map hostnames and IP addresses.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example of the line in inventory file:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dc-br01-1:ios-xe:lan/dc-br
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In Oxidized configuration file we have the next settings:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;output omitted&amp;gt;
input:
  default: ssh
  debug: false
  ssh:
    secure: false

output:
  default: file
  file:
    directory: /opt/oxidized/group

source:
  default: csv
  csv:
    file: /opt/oxidized/inventory
    delimiter: !ruby/regexp /:/
    gpg: false
    gpg_password: password
    map:
      name: 0
      model: 1
      group: 2

model_map:
  ios-xe: ios
  nx-os: nxos

hooks:
  node_failed:
    type: exec
    events: [node_fail]
    cmd: echo Failed to get configuration from $OX_NODE_NAME - $OX_NODE_IP via SSH | mutt -s &quot;[ALERT] Connection to $OX_NODE_NAME via SSH failed&quot; noc@site.ru -e &quot;my_hdr From:oxidized@site.ru&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So when Oxidized getting configuration of devices listed in the inventory file, it creates the following directories, each containing the corresponding files:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tree &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; 1 /opt/oxidized/lan
/opt/oxidized/lan
├── dc-bcsw
├── dc-br
├── dc-csw
├── dc-fw
├── dc-msw
├── dc-wlc 
&amp;lt;output omitted&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Crontab on the Oxidized server contains the following lines:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;01 11 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;     python3 /mnt/python-scripts/NetBoxPython/NetBoxToOxidizedExport.py
05 11 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;     systemctl restart oxidized
01 12 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /opt/oxidized/lan &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./git_autopush
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It means, that inventory file generates every day. 
Also,&lt;code class=&quot;highlighter-rouge&quot;&gt;git_autopush&lt;/code&gt;is the small and simple bash script, that automatically push all changes to GitLab for easy viewing and daily e-mails to NOC team.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /opt/oxidized/lan/git_autopush 
git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;curtime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Automatic Backup @ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$curtime&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>RHCE System Optimization Basics</title>
   <link href="http://localhost:4000/rhce-system-optimization-basics"/>
   <updated>2017-12-25T00:00:00-05:00</updated>
   <id>http://localhost:4000/rhce-system-optimization-basics</id>
   <content type="html">&lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/rhce-system-optimization-basics#procfs&quot;&gt;procfs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/rhce-system-optimization-basics#sysfs&quot;&gt;sysfs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/rhce-system-optimization-basics#Tuned&quot;&gt;Tuned&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;procfs-&quot;&gt;procfs &lt;a name=&quot;procfs&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;procfs&lt;/code&gt;is a virtual filesystem, usually mounted on&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc&lt;/code&gt;. Contains generic kernel parameters.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mount | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;proc
proc on /proc &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;proc &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;!---excerpt-break--&gt;

&lt;p&gt;Utilities for displaing information like system processes (&lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;ps&lt;/code&gt;, etc…) takes data from the&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc&lt;/code&gt;directory, for example,&lt;code class=&quot;highlighter-rouge&quot;&gt;lscpu&lt;/code&gt;use&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/cpuinfo&lt;/code&gt;file as one of the source.&lt;/p&gt;

&lt;p&gt;Wherein data that&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc&lt;/code&gt;contains may not be in human-readable format.&lt;/p&gt;

&lt;p&gt;It is worth noting that&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc&lt;/code&gt;contains directories of the form&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/&amp;lt;PID&amp;gt;&lt;/code&gt;in which there are files with the information about the currently running processes.&lt;/p&gt;

&lt;p&gt;For example, output of the&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/&amp;lt;PID&amp;gt;/cmdline&lt;/code&gt;shows command, by whitch the process was started:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps aux | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;nginx
root      1449  0.0  0.0  46308  1148 ?        Ss   Dec16   0:00 nginx: master process /usr/sbin/nginx &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/nginx/nginx.conf
nginx     1451  0.0  0.1  46824  2176 ?        S    Dec16   0:00 nginx: worker process

&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /proc/1449/cmdline 
nginx: master process /usr/sbin/nginx &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/nginx/nginx.conf%  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Usually, user can’t change files in the&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc&lt;/code&gt;directory, permissions of this files are read-only even for root.&lt;/p&gt;

&lt;p&gt;One of the exceptions is the&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/sys&lt;/code&gt;directory. Manual tuning of the kernel parameters is carried out by changing the contents of files in this directory.
For example,&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/sys/net&lt;/code&gt;contains settings related to network traffic management.&lt;/p&gt;

&lt;p&gt;Example of disabling ipv6 on a running system using&lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt;command:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ip addr | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;inet6 | &lt;span class=&quot;nb&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
2

&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;1 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /proc/sys/net/ipv6/conf/all/disable_ipv6

ip addr | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;inet6 | &lt;span class=&quot;nb&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;                      
0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It’s important, that this way of changing kernel parameters works only while the system is running. Settings won’t be saved after reboot of the system, because&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc&lt;/code&gt;files are computed on request.&lt;/p&gt;

&lt;p&gt;Note that it’s not recommended to change kernel optins in the&lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/sys&lt;/code&gt;using text editors. This action may violate the integrity of the file.&lt;/p&gt;

&lt;p&gt;Another way to change kernel parameters is the&lt;code class=&quot;highlighter-rouge&quot;&gt;sysctl&lt;/code&gt;utility. An example&lt;code class=&quot;highlighter-rouge&quot;&gt;sysctl&lt;/code&gt;output of all parameters that can be changed:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sysctl &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Example of enabling ipv6 on a running system using&lt;code class=&quot;highlighter-rouge&quot;&gt;sysctl&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ip addr | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;inet6 | &lt;span class=&quot;nb&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
0

sysctl &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; net.ipv6.conf.all.disable_ipv6&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0  
net.ipv6.conf.all.disable_ipv6 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0

ip addr | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;inet6 | &lt;span class=&quot;nb&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;For a permanent effect, it need to specify parameters to be changed in&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/sysctl.conf&lt;/code&gt;(symlink to&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/sysctl.d/99-sysctl.conf&lt;/code&gt;) or in one of the following directories:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/sysctl.d/
/usr/lib/sysctl.d/
/run/sysctl.d/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The&lt;code class=&quot;highlighter-rouge&quot;&gt;sysctl&lt;/code&gt;command with&lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt;key can be used to immediately apply the contents of all listed files.&lt;/p&gt;

&lt;h2 id=&quot;sysfs-&quot;&gt;sysfs &lt;a name=&quot;sysfs&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sysfs&lt;/code&gt;is a virtual filesystem, usually mounted on&lt;code class=&quot;highlighter-rouge&quot;&gt;/sys&lt;/code&gt;. Contains symbolic links to hardware related parameters. Doesn’t have it’s own&lt;code class=&quot;highlighter-rouge&quot;&gt;sysctl&lt;/code&gt;. Sub filesystems are also mounted on&lt;code class=&quot;highlighter-rouge&quot;&gt;/sys/*&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mount | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;sys 
sysfs on /sys &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;sysfs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
securityfs on /sys/kernel/security &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;securityfs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
tmpfs on /sys/fs/cgroup &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;tmpfs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ro,nosuid,nodev,noexec,mode&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;755&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
cgroup on /sys/fs/cgroup/systemd &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;cgroup &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime,xattr,release_agent&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/lib/systemd/systemd-cgroups-agent,name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;systemd&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
pstore on /sys/fs/pstore &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;pstore &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
cgroup on /sys/fs/cgroup/devices &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;cgroup &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime,devices&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
cgroup on /sys/fs/cgroup/net_cls,net_prio &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;cgroup &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime,net_prio,net_cls&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
cgroup on /sys/fs/cgroup/cpu,cpuacct &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;cgroup &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime,cpuacct,cpu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
cgroup on /sys/fs/cgroup/memory &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;cgroup &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime,memory&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
cgroup on /sys/fs/cgroup/pids &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;cgroup &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime,pids&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
cgroup on /sys/fs/cgroup/perf_event &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;cgroup &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime,perf_event&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
cgroup on /sys/fs/cgroup/hugetlb &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;cgroup &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime,hugetlb&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
cgroup on /sys/fs/cgroup/cpuset &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;cgroup &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime,cpuset&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
cgroup on /sys/fs/cgroup/blkio &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;cgroup &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime,blkio&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
cgroup on /sys/fs/cgroup/freezer &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;cgroup &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,nosuid,nodev,noexec,relatime,freezer&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
configfs on /sys/kernel/config &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;configfs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,relatime&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
systemd-1 on /proc/sys/fs/binfmt_misc &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;autofs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,relatime,fd&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;30,pgrp&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1,timeout&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0,minproto&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5,maxproto&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5,direct,pipe_ino&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;11284&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
debugfs on /sys/kernel/debug &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;debugfs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;rw,relatime&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Example of tuning hardware related parameters through&lt;code class=&quot;highlighter-rouge&quot;&gt;/sys&lt;/code&gt;(disabling CPU):&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lscpu | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'CPU(s)'&lt;/span&gt;
CPU&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:                8
On-line CPU&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; list:   0-7

&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /sys/devices/system/cpu/ | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;cpu
cpu0
cpu1
cpu2
cpu3
cpu4
cpu5
cpu6
cpu7

&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;0 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /sys/devices/system/cpu/cpu1/online

dmesg | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'CPU 1'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;764966.775449] smpboot: CPU 1 is now offline

lscpu | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'CPU(s)'&lt;/span&gt;
CPU&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:                8
On-line CPU&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; list:   0,2-7
Off-line CPU&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; list:  1
NUMA node0 CPU&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:     0,2-7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tuned-&quot;&gt;Tuned &lt;a name=&quot;Tuned&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The simplest way to set recommended parameters for a particular usage profile is the&lt;code class=&quot;highlighter-rouge&quot;&gt;Tuned&lt;/code&gt;utility.
To list all profiles:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tuned-adm list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;All profile settings are in the&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/lib/tuned/&lt;/code&gt;directory. For example, a desktop&lt;code class=&quot;highlighter-rouge&quot;&gt;Tuned&lt;/code&gt;profile:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /usr/lib/tuned/descktop/tuned.conf
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# tuned configuration&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;main]
&lt;span class=&quot;nv&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Optimize &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the desktop use-case
&lt;span class=&quot;nv&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;balanced

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;sysctl]
kernel.sched_autogroup_enabled&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Сборка deb пакета из программы на Python</title>
   <link href="http://localhost:4000/making-deb-packet-from-Python-file"/>
   <updated>2017-12-17T00:00:00-05:00</updated>
   <id>http://localhost:4000/making-deb-packet-from-Python-file</id>
   <content type="html">&lt;p&gt;Дано - примитивный демон на python, который:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Слушает 80 порт;&lt;/li&gt;
  &lt;li&gt;Возвращает строку “It Works”;&lt;/li&gt;
  &lt;li&gt;Читает из конфигурационного файла расположение log файла;&lt;/li&gt;
  &lt;li&gt;Пишет в указанный log файл о соединении;&lt;/li&gt;
  &lt;li&gt;Закрывает соединение.&lt;/li&gt;
&lt;/ol&gt;

&lt;!---excerpt-break--&gt;

&lt;p&gt;Исходный код демона:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;socket&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'/etc/python-listener/default.conf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conf_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conf_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'LOG:'&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;log_file_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;conf_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{} connected&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'It Works&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{} disconnected&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;log_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Запакуем программу в единый бинарный файл со всеми зависимостями с использованием pyinstaller:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; pyinstaller &lt;span class=&quot;nt&quot;&gt;--onefile&lt;/span&gt; /opt/python-listener/python-listener.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Существует опция запаковки зависимостей отдельно (без использования ключа &lt;code class=&quot;highlighter-rouge&quot;&gt;onefile&lt;/code&gt;), которая позволяет существенно сократить размер бинарного файла за счет вынесения из него зависимостей, но в данной статье мы ей не воспользуемся.&lt;/p&gt;

&lt;p&gt;Начнем готовить среду для создания deb пакета:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /opt/python-listener/
&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;DEBIAN
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;DEBIAN 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Опишем основные свойства пакета (обязательный файл):&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EOF&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt; &amp;gt; control
Package:      python-listener
Version:      1.0-2017.12.17
Maintainer:   Maintainer &amp;lt;maintainer-mail@mail.com&amp;gt;
Architecture: all
Section:      web
Description:  Simple Python Listener Daemon
Depends:      python2.7
&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EOF
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Подготовим остальные используемые файлы:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Созданный ранее бинарный файл python-listener в директории &lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/python-listener/usr/bin/&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Файл конфигурации &lt;code class=&quot;highlighter-rouge&quot;&gt;default.conf&lt;/code&gt; в директории &lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/python-listener/etc/python-listener/&lt;/code&gt; с единственной строкой:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;LOG: &lt;span class=&quot;s1&quot;&gt;'/var/log/python-listener.log'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Юнит systemd &lt;code class=&quot;highlighter-rouge&quot;&gt;python-listener.service&lt;/code&gt; в директории &lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/python-listener/lib/systemd/system/&lt;/code&gt; следующего содержания:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Unit]
&lt;span class=&quot;nv&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Simple Python Listener Daemon
&lt;span class=&quot;nv&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;multi-user.target

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Service]
&lt;span class=&quot;nv&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;idle
&lt;span class=&quot;nv&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/bin/python-listener

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Install]
&lt;span class=&quot;nv&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;После подготовки имеется следующая иерархия файлов и директорий:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/opt/python-listener# tree 
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
├── DEBIAN
│   └── control
├── etc
│   └── python-listener
│       └── default.conf
├── lib
│   └── systemd
│       └── system
│           └── python-listener.service
└── usr
    └── bin
        └── python-listener
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Соберем пакет:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dpkg-deb &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; /opt/python-listener/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;В итоге на выходе получим пакет &lt;code class=&quot;highlighter-rouge&quot;&gt;python-listener.deb&lt;/code&gt;, который может быть установлен в систему с использованием команды&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dpkg &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; python-listener.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>SQL Basics</title>
   <link href="http://localhost:4000/sql-basics"/>
   <updated>2017-11-03T00:00:00-04:00</updated>
   <id>http://localhost:4000/sql-basics</id>
   <content type="html">&lt;h2 id=&quot;содержание&quot;&gt;Содержание&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/sql-basics#Манипуляции с таблицами&quot;&gt;Манипуляции с таблицами&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/sql-basics#Запросы к базе данных&quot;&gt;Запросы к базе данных&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/sql-basics#Aggregate Functions&quot;&gt;Aggregate Functions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/sql-basics#Связь нескольких таблиц в базе данных&quot;&gt;Связь нескольких таблиц в базе данных&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Конспект курса Learn SQL с ресурса &lt;a href=&quot;https://www.codecademy.com/learn/learn-sql&quot;&gt;codeacademy.com&lt;/a&gt;. Во всех примерах используется синтаксис SQLite.&lt;/p&gt;

&lt;p&gt;Реляционные базы данных - базы данных, организованные в виде одной или нескольких таблиц. 
Таблица - определенный набор данных. Таблицы состоят из строк и столбцов (полей и записей).&lt;/p&gt;

&lt;!---excerpt-break--&gt;

&lt;h2 id=&quot;манипуляции-с-таблицами-&quot;&gt;Манипуляции с таблицами &lt;a name=&quot;Манипуляции с таблицами&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Пример создания таблицы:&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;column_1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;column_2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;column_3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_type&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Пример добавления данных в таблицу:&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value_3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Примеры запроса значений из таблицы:&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Пример добавления столбца в таблицу:&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;ADD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COLUMN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_4&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Пример удаления столбца из таблицы:&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COLUMN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Пример изменения записи в таблице:&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value_2&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Пример удаления записи в таблице:&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;constraints&quot;&gt;Constraints&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PRIMARY KEY&lt;/code&gt;- уникально идентифицирует каждую запись в таблице. Таблица может содержать только один столбец, использующийся как &lt;code class=&quot;highlighter-rouge&quot;&gt;PRIMARY KEY&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UNIQUE&lt;/code&gt;- схож с &lt;code class=&quot;highlighter-rouge&quot;&gt;PRIMARY KEY&lt;/code&gt;, с тем отличием, что в таблице может быть несколько столбцов с уникальными значениями (ключевым словом &lt;code class=&quot;highlighter-rouge&quot;&gt;UNIQUE&lt;/code&gt;);&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NOT NULL&lt;/code&gt;- указатель на то, что каждая запись должна иметь значение в данном столбце. Записи без значения в таблицу вставлены не будут;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DEFAULT&lt;/code&gt;- указывает на значение по умолчанию поля для записи.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Пример создания таблицы:&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;column_1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
   &lt;span class=&quot;n&quot;&gt;column_2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UNIQUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
   &lt;span class=&quot;n&quot;&gt;column_3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;column_4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_type&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value_4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;запросы-к-базе-данных-&quot;&gt;Запросы к базе данных &lt;a name=&quot;Запросы к базе данных&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT DISTINCT ...&lt;/code&gt; - возвращает только уникальные значения из таблицы;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM table_name WHERE condition;&lt;/code&gt; - возвращает записи, отвечающие определенному условию;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM table_name WHERE column LIKE pattern;&lt;/code&gt; - возвращает записи, удовлетворяющие определенному паттерну;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM table_name WHERE column BETWEEN value_1 AND value_2;&lt;/code&gt; - возвращает записи в интервале между указанными значениями;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM table_name ORDER BY column ASC/DESC;&lt;/code&gt; - возвращает записи в сортированном виде в порядке возрастания/убывания;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM table_name LIMIT &amp;lt;number&amp;gt;;&lt;/code&gt; - возвращает указанное количество записей;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Синтаксис, используемый в LIKE:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;‘_’ - любой символ;&lt;/li&gt;
  &lt;li&gt;’%’ - любая последовательность символов;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;aggregate-functions-&quot;&gt;Aggregate Functions &lt;a name=&quot;Aggregate Functions&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Функции, позволяющие проводить манипуляции над набором значений и получать единственный результат&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;COUNT&lt;/code&gt;- возвращает количество записей в таблице.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Пример запроса:&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT COUNT(*) FROM table_name;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GROUP BY&lt;/code&gt;- группирует результаты запроса по значению одного или нескольких полей.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Пример запроса:&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT column_1, COUNT(*) FROM table_name GROUP BY column_1;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SUM&lt;/code&gt;- возвращает сумму всех значений поля (только для INTEGER).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Пример запроса:&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT SUM(column_1) FROM table_name;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MAX&lt;/code&gt;- возвращает максимальное значение для поля.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Пример запроса:&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT MAX(column_1) FROM table_name;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MIN&lt;/code&gt;- возвращает минимальное значение для поля.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Пример запроса:&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT MIN(column_1) FROM table_name;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AVG&lt;/code&gt;- возвращает среднее значение для поля.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Пример запроса:  &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT AVG(column_1) FROM table_name;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ROUND&lt;/code&gt;- округляет результаты запроса с указанной точностью.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Пример запроса (2 знака после запятой):  &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT ROUND(AVG(column_1), 2) FROM table_name;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;связь-нескольких-таблиц-в-базе-данных-&quot;&gt;Связь нескольких таблиц в базе данных &lt;a name=&quot;Связь нескольких таблиц в базе данных&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FOREIGN KEY&lt;/code&gt; - поле таблицы, которое содержит &lt;code class=&quot;highlighter-rouge&quot;&gt;PRIMARY KEY&lt;/code&gt; другой таблицы в базе данных. Могут быть неуникальными в пределах таблицы, либо типа NULL.&lt;/li&gt;
  &lt;li&gt;Cross Join - указание на то, что &lt;code class=&quot;highlighter-rouge&quot;&gt;FOREIGN KEY&lt;/code&gt; одной таблицы является &lt;code class=&quot;highlighter-rouge&quot;&gt;PRIMARY KEY&lt;/code&gt; другой таблицы.&lt;/li&gt;
  &lt;li&gt;Inner Join, &lt;code class=&quot;highlighter-rouge&quot;&gt;FOREIGN KEY&lt;/code&gt; (column_1) из таблицы table_name_1 сопоставляется с &lt;code class=&quot;highlighter-rouge&quot;&gt;PRIMARY KEY&lt;/code&gt; (column_2) таблицы table_name_2:
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name_1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name_2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Outer Join&lt;/code&gt; - запрос, аналогичный &lt;code class=&quot;highlighter-rouge&quot;&gt;Inner Join&lt;/code&gt;, но выполнение Join Condition необязательно. Пример запроса &lt;code class=&quot;highlighter-rouge&quot;&gt;Outer Join&lt;/code&gt;:
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name_1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name_2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_name_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_name_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AS&lt;/code&gt; (Alias) - ключевое слово, позволяющее переименовать поле таблицы при присоединении. Пример:
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column_2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DROP TABLE IF EXISTS&lt;/code&gt; - удаление таблицы из базы данных, если таблица существует;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE TABLE IF NOT EXISTS&lt;/code&gt; - создание таблицы в базе данных, если таблица еще не существует.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;REFERENCES&lt;/code&gt; - указание на зависимость поля одной таблицы от поля другой таблицы. Пример:
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FOREIGN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REFERENCES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table_name_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>OSPFv2 Loop-Free Alternate Fast Reroute</title>
   <link href="http://localhost:4000/ospfv2-loop-free-alternate-fast-reroute"/>
   <updated>2017-10-03T00:00:00-04:00</updated>
   <id>http://localhost:4000/ospfv2-loop-free-alternate-fast-reroute</id>
   <content type="html">&lt;h2 id=&quot;содержание&quot;&gt;Содержание&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/ospfv2-loop-free-alternate-fast-reroute#термины&quot;&gt;Термины&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/ospfv2-loop-free-alternate-fast-reroute#предварительная-настройка&quot;&gt;Предварительная настройка&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/ospfv2-loop-free-alternate-fast-reroute#атрибуты-LFA-FRR&quot;&gt;Атрибуты LFA FRR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;OSPF LFA FRR - технология, позволяющая протоколу OSPF заранее установить в RIB резервный путь для определенных префиксов и использовать его в случае отказа основного канала без расчета нового next-hop.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc5286&quot;&gt;RFC 5286&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_ospf/configuration/xe-3s/iro-lfa-frr-xe.html&quot;&gt;Описание от Cisco&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ограничения для OSPFv2:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Не поддерживается на маршрутизаторах с virtual-link;&lt;/li&gt;
  &lt;li&gt;Не поддерживаются VRF (настройка возможна только в global OSPF instance).&lt;/li&gt;
&lt;/ul&gt;

&lt;!---excerpt-break--&gt;

&lt;h2 id=&quot;термины-&quot;&gt;Термины &lt;a name=&quot;термины&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;LFA Repair Path - заранее предустановленный путь для трафика, становящийся активным при отказе основного пути;&lt;/p&gt;

&lt;p&gt;Топология, используемая в лабораторной работе:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;public/ospfv2-loop-free-alternate-fast-reroute-img1.png&quot; alt=&quot;topology&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;предварительная-настройка-&quot;&gt;Предварительная настройка &lt;a name=&quot;предварительная настройка&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Предварительно на всех CSR настроен OSPF, и интерфейс Lo0 с адресом 10.0.0.n/32. Все интерфейсы помещены в area0. Маршрутизаторы vIOS выступают в качестве клиентов.&lt;/p&gt;

&lt;p&gt;OSPF RIB на CSR2 до включения FRR:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CSR2#sh ip ospf rib

OSPF Router with ID (10.0.25.2) (Process ID 1)

Base Topology (MTID 0)

OSPF local RIB
Codes: * - Best, &amp;gt; - Installed in global RIB

* 10.0.0.2/32, Intra, cost 1, area 0, Connected
 via 10.0.0.2, Loopback0
*&amp;gt; 10.0.0.3/32, Intra, cost 2, area 0
 via 10.0.23.3, GigabitEthernet3
*&amp;gt; 10.0.0.4/32, Intra, cost 2, area 0
 via 10.0.24.4, GigabitEthernet2
*&amp;gt; 10.0.0.5/32, Intra, cost 2, area 0
 via 10.0.25.5, GigabitEthernet4
* 10.0.12.0/24, Intra, cost 1, area 0, Connected
 via 10.0.12.2, GigabitEthernet1
* 10.0.23.0/24, Intra, cost 1, area 0, Connected
 via 10.0.23.2, GigabitEthernet3
* 10.0.24.0/24, Intra, cost 1, area 0, Connected
 via 10.0.24.2, GigabitEthernet2
* 10.0.25.0/24, Intra, cost 1, area 0, Connected
 via 10.0.25.2, GigabitEthernet4
*&amp;gt; 10.0.34.0/24, Intra, cost 2, area 0
 via 10.0.23.3, GigabitEthernet3
 via 10.0.24.4, GigabitEthernet2
*&amp;gt; 10.0.45.0/24, Intra, cost 2, area 0
 via 10.0.25.5, GigabitEthernet4
 via 10.0.24.4, GigabitEthernet2
*&amp;gt; 10.0.46.0/24, Intra, cost 2, area 0
 via 10.0.24.4, GigabitEthernet2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;OSPF RIB на CSR2 после включения FRR на всех CSR командой &lt;em&gt;fast-reroute per-prefix enable area 0 prefix-priority low&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CSR2#sh ip ospf rib

OSPF Router with ID (10.0.25.2) (Process ID 1)

Base Topology (MTID 0)

OSPF local RIB
Codes: * - Best, &amp;gt; - Installed in global RIB

* 10.0.0.2/32, Intra, cost 1, area 0, Connected
 via 10.0.0.2, Loopback0
*&amp;gt; 10.0.0.3/32, Intra, cost 2, area 0
 via 10.0.23.3, GigabitEthernet3
 repair path via 10.0.24.4, GigabitEthernet2, cost 3
*&amp;gt; 10.0.0.4/32, Intra, cost 2, area 0
 via 10.0.24.4, GigabitEthernet2
 repair path via 10.0.25.5, GigabitEthernet4, cost 3
*&amp;gt; 10.0.0.5/32, Intra, cost 2, area 0
 via 10.0.25.5, GigabitEthernet4
 repair path via 10.0.24.4, GigabitEthernet2, cost 3
* 10.0.12.0/24, Intra, cost 1, area 0, Connected
 via 10.0.12.2, GigabitEthernet1
* 10.0.23.0/24, Intra, cost 1, area 0, Connected
 via 10.0.23.2, GigabitEthernet3
* 10.0.24.0/24, Intra, cost 1, area 0, Connected
 via 10.0.24.2, GigabitEthernet2
* 10.0.25.0/24, Intra, cost 1, area 0, Connected
 via 10.0.25.2, GigabitEthernet4
*&amp;gt; 10.0.34.0/24, Intra, cost 2, area 0
 via 10.0.23.3, GigabitEthernet3
 repair path via 10.0.24.4, GigabitEthernet2, cost 2
 via 10.0.24.4, GigabitEthernet2
 repair path via 10.0.23.3, GigabitEthernet3, cost 2
*&amp;gt; 10.0.45.0/24, Intra, cost 2, area 0
 via 10.0.25.5, GigabitEthernet4
 repair path via 10.0.24.4, GigabitEthernet2, cost 2
 via 10.0.24.4, GigabitEthernet2
 repair path via 10.0.25.5, GigabitEthernet4, cost 2
*&amp;gt; 10.0.46.0/24, Intra, cost 2, area 0
 via 10.0.24.4, GigabitEthernet2
 repair path via 10.0.25.5, GigabitEthernet4, cost 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Видно, что после включения FRR в OSPF RIB появляется repair path для тех префиксов, которые могут быть доступны более чем через один next-hop. Также repair path появляется в CEF (пример для 10.0.46.0/24):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CSR2#sh ip cef 10.0.46.0
10.0.46.0/24
 nexthop 10.0.24.4 GigabitEthernet2
 repair: attached-nexthop 10.0.25.5 GigabitEthernet4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Имеется возможность селективного задания префиксов, для которых будет выбираться repair path:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ip prefix-list PL_FRR_HIGH_PRIORITY seq 5 permit 10.0.46.0/24

route-map RM_FRR_HIGH_PRIORITY permit 10
  match ip address prefix-list PL_FRR_HIGH_PRIORITY

router ospf 1
  prefix-priority high route-map RM_FRR_HIGH_PRIORITY
  fast-reroute per-prefix enable area 0 prefix-priority high
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;При подобной настройке repair path будет создан только для префикса 10.0.46.0/24. Следует учитывать, что без явного указания /32 префиксы имеют high приоритет, а все остальные – low.&lt;/p&gt;

&lt;h2 id=&quot;атрибуты-lfa-frr-&quot;&gt;Атрибуты LFA FRR &lt;a name=&quot;атрибуты-LFA-FRR&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Возможна настройка следующих атрибутов (с указанием приоритета):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;10 srlg   
20 primary-path   
30 interface-disjoint   
40 lowest-metric   
50 linecard-disjoint   
60 node-protecting   
70 broadcast-interface-disjoint   
256 load-sharing
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Данные атрибуты непосредственно влияют на выбор repair path (при наличии нескольких вариантов). Индекс (приоритет атрибута) можно изменить командой:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fast-reroute per-prefix tie-break  index 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;shared-risk-link-group-srlg&quot;&gt;Shared Risk Link Group (SRLG)&lt;/h3&gt;

&lt;p&gt;Группа интерфейсов, обладающих одинаковым риском отказа (например – при отказе физического интерфейса все sub-интерфейсы также будут неактивны). Канал, находящийся в одной SRLG с основным, по умолчанию не будет выбран в качестве repair path при наличии других вариантов.&lt;/p&gt;

&lt;p&gt;####Пример настройки:&lt;/p&gt;

&lt;p&gt;По умолчанию в качестве repair path для префикса 10.0.46.0/24 на CSR2 выступает next-hop 10.0.25.5, доступный через интерфейс Gi4:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CSR2#sh ip ospf rib 10.0.46.0 | i repair
 repair path via 10.0.25.5, GigabitEthernet4, cost 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Объединим интерфейс Gi4 в одну SRLG вместе с основным (Gi2):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; CSR2(config)#int gi 2
 CSR2(config-if)#srlg gid 1
 CSR2(config-if)#int gi 4
 CSR2(config-if)#srlg gid 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;После этого repair path поменялся на next-hop, доступный через Gi3, так как Gi2 и Gi4 теперь с точки зрения маршрутизатора находятся в одном домене отказа:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CSR2#sh ip ospf rib 10.0.46.0 | i repair
 repair path via 10.0.23.3, GigabitEthernet3, cost 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;primary-path&quot;&gt;Primary-path&lt;/h3&gt;

&lt;p&gt;При использовании данного атрибута в качестве repair path всегда (при отсутствии влияния SRLG) будет выбран next-hop, через который вместе с основным next-hop балансируется (ECMP) трафик. Например, выбор repair path на CSR2 для префикса 10.0.34.0/24 (стыковочная сеть между маршрутизаторами CSR3 и CSR4) будет выглядеть следующим образом&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CSR2#sh ip ospf rib 10.0.34.0

OSPF Router with ID (10.0.25.2) (Process ID 1)

Base Topology (MTID 0)

OSPF local RIB
Codes: * - Best, &amp;gt; - Installed in global RIB
LSA: type/LSID/originator

*&amp;gt; 10.0.34.0/24, Intra, cost 2, area 0
 SPF Instance 27, age 00:57:01
 Flags: RIB
 via 10.0.23.3, GigabitEthernet3
 Flags: RIB
 LSA: 2/10.0.34.4/10.0.0.4
 repair path via 10.0.24.4, GigabitEthernet2, cost 2
 Flags: RIB, Repair, IntfDj, BcastDj, PrimPath, NodeProt, Downstr
 LSA: 2/10.0.34.4/10.0.0.4
 via 10.0.24.4, GigabitEthernet2
 Flags: RIB
 LSA: 2/10.0.34.4/10.0.0.4
 repair path via 10.0.23.3, GigabitEthernet3, cost 2
 Flags: RIB, Repair, IntfDj, BcastDj, PrimPath, NodeProt, Downstr
 LSA: 2/10.0.34.4/10.0.0.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Из приведенного вывода понятно, что next-hop в ECMP будут являться repair path друг для друга.&lt;/p&gt;

&lt;h3 id=&quot;interface-disjoint&quot;&gt;Interface-disjoint&lt;/h3&gt;

&lt;p&gt;Данный атрибут означает, что приоритетным repair path будет выбран next-hop доступный через интерфейс, отличный от интерфейса основного next-hop. При этом sub-interfaces считаются разными интерфейсами, и при выборе между ними данный атрибут не будет играть роли.&lt;/p&gt;

&lt;h3 id=&quot;lowest-metric&quot;&gt;Lowest-metric&lt;/h3&gt;

&lt;p&gt;При использовании атрибута lowest-metric в выборе repair path будет учитываться метрика до префикса назначения через резервные next-hop. Соответственно, выбран будет next-hop с меньшей метрикой.&lt;/p&gt;

&lt;h3 id=&quot;linecard-disjoint&quot;&gt;Linecard-disjoint&lt;/h3&gt;

&lt;p&gt;Атрибут, аналогичный interface-disjoint, с тем отличием, что интерфейсы, расположенные в одной линейной карте с основным, считаются менее приоритетными в выборе repair path.&lt;/p&gt;

&lt;h3 id=&quot;node-protecting&quot;&gt;Node-protecting&lt;/h3&gt;

&lt;p&gt;Данный атрибут служит защитой от отказа OSPF соседа, на котором расположены основной и резервный next-hop. Больший приоритет в выборе repair path будет иметь next-hop, расположенный на другом маршрутизаторе.&lt;/p&gt;

&lt;h3 id=&quot;broadcast-interface-disjoint&quot;&gt;Broadcast-interface-disjoint&lt;/h3&gt;

&lt;p&gt;Данный атрибут делает более приоритетным next-hop, расположенный в разных с основным next-hop broadcast доменах. Это позволяет быстрее перестроить топологию при отказе коммутатора в топологиях, когда несколько маршрутизаторов строят OSPF соседство через данный коммутатор.&lt;/p&gt;

&lt;h3 id=&quot;downstream&quot;&gt;Downstream&lt;/h3&gt;

&lt;p&gt;Выключен по умолчанию. При его включении начинается подсчет метрик, аналогичный EIGRP Feasibility Condition (метрика соседа должна быть меньше, чем метрика основного маршрута). Соответственно, выбран будет next-hop, удовлетворяющий данному условию.&lt;/p&gt;

&lt;h3 id=&quot;secondary-path&quot;&gt;Secondary-path&lt;/h3&gt;

&lt;p&gt;Выключен по умолчанию. Атрибут, противоположный атрибуту primary-path. При его использовании приоритетным будет выбран next-hop, не участвующий в ECMP с основным (логика такова, что два канала в ECMP потенциально могут быть подвержены одним и тем же проблемам, и присутствует вероятность, что они откажут одновременно).&lt;/p&gt;

&lt;p&gt;Вывод для префикса 10.0.34.0/24 с маршрутизатора CSR2 до включения атрибута secondary-path:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CSR2#sh ip ospf rib 10.0.34.0 | i repair
 repair path via 10.0.24.4, GigabitEthernet2, cost 2
 repair path via 10.0.23.3, GigabitEthernet3, cost 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Вывод для префикса 10.0.34.0/24 с маршрутизатора CSR2 после включения атрибута secondary-path:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CSR2(config-router)#fast-reroute per-prefix tie-break secondary-path index 5

CSR2#sh ip ospf fast-reroute | i secondary
 5 secondary-path

CSR2#sh ip ospf rib 10.0.34.0 | i repair
 repair path via 10.0.25.5, GigabitEthernet4, cost 3
 repair path via 10.0.25.5, GigabitEthernet4, cost 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>OSPF as PE-CE routing protocol</title>
   <link href="http://localhost:4000/ospf-as-pe-ce-routing-protocol"/>
   <updated>2017-10-03T00:00:00-04:00</updated>
   <id>http://localhost:4000/ospf-as-pe-ce-routing-protocol</id>
   <content type="html">&lt;h2 id=&quot;содержание&quot;&gt;Содержание&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/ospf-as-pe-ce-routing-protocol#Sham-Link&quot;&gt;Sham-Link&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/ospf-as-pe-ce-routing-protocol#DN-bit&quot;&gt;DN (down) bit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sham-link-&quot;&gt;Sham-Link &lt;a name=&quot;Sham-Link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Используется при MPLS L3VPN с наличием backdoor канала между PE (между CE).&lt;/p&gt;

&lt;!---excerpt-break--&gt;

&lt;p&gt;По умолчанию при использовании OSPF на стыке PE-CE, клиент видит маршруты с другого CE как OSPF IA (RFC 4576/4577):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CE1#sh ip ospf database summary 10.0.0.6
            OSPF Router with ID (10.0.0.1) (Process ID 100)
                Summary Net Link States (Area 0)

  Routing Bit Set on this LSA in topology Base with MTID 0
  LS age: 1662
  Options: (No TOS-capability, DC, Downward)
  LS Type: Summary Links(Network)
  Link State ID: 10.0.0.6 (summary Network Number)
  Advertising Router: 10.0.12.2
  LS Seq Number: 80000001
  Checksum: 0xF692
  Length: 28
  Network Mask: /32
        MTID: 0         Metric: 11 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Если между PE организован backdoor канал, не входящий в MPLS облако, и поверх него настроено OSPF соседство в VRF клиента, данный канал по умолчанию будет использоваться для трафика (intra-area маршруты имеют больший приоритет, чем inter-area).&lt;/p&gt;

&lt;p&gt;При использовании sham-link между PE строится виртуальный линк в VRF клиента. Таким образом PE устанавливают прямое OSPF соседство и маршрут перестает быть IA:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CE1#sh ip ospf database router 10.0.0.6
            OSPF Router with ID (10.0.0.1) (Process ID 100)
                Router Link States (Area 0)

  LS age: 1536 (DoNotAge)
  Options: (No TOS-capability, DC)
  LS Type: Router Links
  Link State ID: 10.0.0.6
  Advertising Router: 10.0.0.6
  LS Seq Number: 80000004
  Checksum: 0x86CF
  Length: 48
  Number of Links: 2
    Link connected to: a Stub Network
     (Link ID) Network/subnet number: 10.0.0.6
     (Link Data) Network Mask: 255.255.255.255
      Number of MTID metrics: 0
       TOS 0 Metrics: 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;dn-down-bit-&quot;&gt;DN (down) bit &lt;a name=&quot;DN-bit&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Используется для предотвращения петель при редистрибуции PE-CE (схема с наличием дополнительной OSPF связи между CE). PE выставляет на LSA Type 3 (также Type 5 и Type 7) флаг DN. Если CE получит данный LSA от другого CE по внутреннему OSPF и передаст его “своему” PE, “свой” PE не будет перераспределять его в MP-BGP:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*Aug 15 10:55:23.425: OSPF-100 INTER: Running spf for summaries area 0 
*Aug 15 10:55:23.425: OSPF-100 INTER: Start processing: type 3, LSID 10.0.0.9, mask 255.255.255.255, 
*Aug 15 10:55:23.425: OSPF-100 INTER:   adv_rtr 10.0.12.2, age 1697, seq 0x80000001, area 0 
*Aug 15 10:55:23.425: OSPF-100 INTER: Downward bit set/Non-backbone LSA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;При использовании sham-link между PE DN bit не выставляется, так как PE не использует LSA Type 3:
&lt;img src=&quot;public/ospf-as-pe-ce-routing-protocol_img1.png&quot; alt=&quot;img1&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Для LSA Type 5 и Type 7 для данных целей дополнительно используется route tag с указанием на VPN ID:
&lt;img src=&quot;public/ospf-as-pe-ce-routing-protocol_img2.png&quot; alt=&quot;img2&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*Aug 15 10:55:23.425: OSPF-100 EXTER: Started Building Type 5 External Routes 
*Aug 15 10:55:23.425: OSPF-100 EXTER: Start processing Type 5 External LSA 10.0.100.2, mask 255.255.255.255
*Aug 15 10:55:23.425: OSPF-100 EXTER:  adv_rtr 10.0.12.2, age 113, seq 0x80000005, metric 1, metric-type 2, fw-addr 0.0.0.0 
*Aug 15 10:55:23.425: OSPF-100 EXTER: Tag equals to VPN Tag, ignoring the LSA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Linux Performance Monitoring</title>
   <link href="http://localhost:4000/linux-performance-monitoring"/>
   <updated>2017-10-03T00:00:00-04:00</updated>
   <id>http://localhost:4000/linux-performance-monitoring</id>
   <content type="html">&lt;h2 id=&quot;содержание&quot;&gt;Содержание&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/linux-performance-monitoring#cpu-memory-usage&quot;&gt;CPU &amp;amp; Memory Usage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/linux-performance-monitoring#disk-io&quot;&gt;Disk IO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/linux-performance-monitoring#network-io&quot;&gt;Network IO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cpu--memory-usage-&quot;&gt;CPU &amp;amp; Memory Usage &lt;a name=&quot;cpu-memory-usage&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;stress&lt;/strong&gt; - утилита для эмуляции нагрузки.&lt;/p&gt;

&lt;h3 id=&quot;утилиты-для-мониторинга-производительности&quot;&gt;Утилиты для мониторинга производительности&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;vmstat&lt;/strong&gt; - краткая информация по утилизации системных ресурсов;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;free&lt;/strong&gt; - краткая информация по использованию памяти;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;top&lt;/strong&gt; - сводная таблица по использованию памяти/процессора.&lt;/p&gt;

&lt;!---excerpt-break--&gt;

&lt;h3 id=&quot;расшифровка-состояний-процессора&quot;&gt;Расшифровка состояний процессора&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;us, user&lt;/strong&gt; : time running un-niced user processes;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sy, system&lt;/strong&gt; : time running kernel processes;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ni, nice&lt;/strong&gt; : time running niced user processes;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;id, idle&lt;/strong&gt; : time spent in the kernel idle handler ;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;wa, IO-wait&lt;/strong&gt; : time waiting for I/O completion;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;hi&lt;/strong&gt; : time spent servicing hardware interrupts;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;si&lt;/strong&gt; : time spent servicing software interrupts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;st&lt;/strong&gt; : time stolen from this vm by the hypervisor&lt;/p&gt;

&lt;h2 id=&quot;disk-io-&quot;&gt;Disk IO &lt;a name=&quot;disk-io&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&quot;утилиты-для-мониторинга-обращений-к-диску&quot;&gt;Утилиты для мониторинга обращений к диску&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;iotop&lt;/strong&gt; - топ процессов по IO;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;iostat&lt;/strong&gt; (поставляется в пакете sysstat) - статистика по IO на различных носителях;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sar&lt;/strong&gt; (поставляется в пакете sysstat) - сбор статистики по различным параметрам системы с заданным интервалом;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;lsof&lt;/strong&gt; (list open files) - список файлов, к которым обращается определенный процесс.&lt;/p&gt;

&lt;h2 id=&quot;network-io-&quot;&gt;Network IO &lt;a name=&quot;network-io&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&quot;утилиты-для-мониторинга-сетевой-активности&quot;&gt;Утилиты для мониторинга сетевой активности&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;ifconfig&lt;/strong&gt; (поставляется в пакете net-tools) - статистика по сетевым интерфейсам;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;netstat&lt;/strong&gt; (поставляется в пакете net-tools) - различная статистика по сетевым параметрам (заменено ss);&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ss&lt;/strong&gt; (поставляется в пакете iproute2) - статистика по текущим сетевым соединениям и открытым портам;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;iftop&lt;/strong&gt; - статистика по сетевым соединениям в реальном времени;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;nload&lt;/strong&gt; - статистика по загрузке интерфейсов в реальном времени.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>L2L IPsec VPN setup on Cisco ASA with VTI</title>
   <link href="http://localhost:4000/l2l-ipsec-vpn-setup-on-cisco-asa-with-vti"/>
   <updated>2017-10-03T00:00:00-04:00</updated>
   <id>http://localhost:4000/l2l-ipsec-vpn-setup-on-cisco-asa-with-vti</id>
   <content type="html">&lt;p&gt;С появлением VTI (Virtual Tunnel Interface) на Cisco ASA стало возможно настроить Route-Based IPsec VPN. Впервые данная функция активирована в версиях прошивки 9.7(x). В версиях 9.8(x) добавлена поддержка IKEv2 (9.7.(x) поддерживает только IKEv1). &lt;a href=&quot;https://www.cisco.com/c/en/us/td/docs/security/asa/asa98/configuration/vpn/asa-98-vpn-config/vpn-vti.pdf&quot;&gt;Configuration guide&lt;/a&gt; для версий 9.8(x).&lt;/p&gt;

&lt;p&gt;Из значимых ограничений можно отметить следующее:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Возможность использовать поверх VTI только BGP, либо статическую маршрутизацию;&lt;/li&gt;
  &lt;li&gt;Отсутствие поддержки Multi-Context Mode;&lt;/li&gt;
  &lt;li&gt;Отсутствие поддержки IPv6.&lt;/li&gt;
&lt;/ol&gt;

&lt;!---excerpt-break--&gt;
&lt;p&gt;Тестовая топология:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;public/l2l-ipsec-vpn-setup-on-cisco-asa-with-vti-img1.png&quot; alt=&quot;topology&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Используется ASAv с прошивкой версии 9.8(1).&lt;/p&gt;

&lt;p&gt;Цель - обеспечить связность между интерфейсами Lo0 маршрутизаторов SiteA_br и SiteB_br. Между маршрутизаторами и ASAv настроен протокол OSPF. Между VTI двух ASAv настроен протокол iBGP. Между протоколами OSPF и iBGP на ASAv настроено перераспределение маршрутов.&lt;/p&gt;

&lt;p&gt;Конфигурация SiteA_ASAv:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hostname SiteA-ASAv

interface Gi0/1
 nameif outside
 ip address 100.0.1.2 255.255.255.0
 no shutdown
 
interface Gi0/0
 nameif inside
 ip address 10.0.1.2 255.255.255.0
 no shutdown
 
route outside 0.0.0.0 0.0.0.0 100.0.1.254

crypto ipsec ikev2 ipsec-proposal PS_L2L
 protocol esp encryption aes-256
 protocol esp integrity sha-1

crypto ipsec profile PR_L2L
 set pfs group2
 set ikev2 ipsec-proposal PS_L2L
 set security-association lifetime seconds 86400 kilobytes unlimited

crypto ikev2 policy 10
 encryption aes
 integrity sha
 group 2
 prf sha
 lifetime seconds 86400 
 
interface tunnel 10
 nameif l2l-vti
 ip address 192.168.0.2 255.255.255.0
 tunnel source interface outside
 tunnel destination 100.0.2.3
 tunnel mode ipsec ipv4
 tunnel protection ipsec profile PR_L2L
 
tunnel-group 100.0.2.3 type ipsec-l2l
tunnel-group 100.0.2.3 ipsec-attributes
 ikev2 remote-authentication pre-shared-key cisco
 ikev2 local-authentication pre-shared-key cisco

access-list ACL_OUTSIDE extended permit ip any any 
access-group ACL_OUTSIDE in interface outside

crypto ikev2 enable outside

router bgp 65000
 address-family ipv4 unicast
  neighbor 192.168.0.3 remote-as 65000
  neighbor 192.168.0.3 next-hop-self
  bgp redistribute-internal
  redistribute ospf 1
 exit-address-family
 
router ospf 1
 network 10.0.1.0 255.255.255.0 area 0
 redistribute bgp 65000 subnets
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;SiteB_ASAv настраивается зеркально.&lt;/p&gt;

&lt;p&gt;В итоге, после применения данной конфигурации на ASAv и соответствующей настройки остальных устройств (включение OSPF) можно увидеть следующий вывод на маршрутизаторе SiteA_br:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SiteA_br#sh ip route 
Gateway of last resort is not set

10.0.0.0/8 is variably subnetted, 5 subnets, 2 masks
C 10.0.0.1/32 is directly connected, Loopback0
O E2 10.0.0.4/32 [110/1] via 10.0.1.2, 00:32:23, Ethernet0/0
C 10.0.1.0/24 is directly connected, Ethernet0/0
L 10.0.1.1/32 is directly connected, Ethernet0/0
O E2 10.0.2.0/24 [110/1] via 10.0.1.2, 00:32:23, Ethernet0/0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Также с маршрутизатора SiteA_br доступен интерфейс Lo0 маршрутизатора SiteB_br:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SiteA_br#ping 10.0.0.4 source 10.0.0.1
Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to 10.0.0.4, timeout is 2 seconds:
Packet sent with a source address of 10.0.0.1 
!!!!!
Success rate is 100 percent (5/5), round-trip min/avg/max = 3/4/6 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Kubernetes notes</title>
   <link href="http://localhost:4000/kubernetes-notes"/>
   <updated>2017-10-03T00:00:00-04:00</updated>
   <id>http://localhost:4000/kubernetes-notes</id>
   <content type="html">&lt;h2 id=&quot;термины&quot;&gt;Термины&lt;/h2&gt;

&lt;h3 id=&quot;pod&quot;&gt;POD&lt;/h3&gt;

&lt;p&gt;Наименьшая сущность, которую можно создать в k8s. Может содержать один или несколько контейнеров. В случае использования нескольких контейнеров network и volume разделяются между ними. Внутри pod контейнеры могут взаимодействовать между собой через localhost.&lt;/p&gt;

&lt;!---excerpt-break--&gt;

&lt;h4 id=&quot;пример-pod-с-несколькими-контейнерами&quot;&gt;Пример pod с несколькими контейнерами:&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[root@k8s-vm1 ~]# kubectl get pods --all-namespaces | grep flannel
kube-system kube-flannel-3fk2m 2/2 Running 0 11h
kube-system kube-flannel-p1vn4 2/2 Running 0 11h
kube-system kube-flannel-pnfkr 2/2 Running 0 11h

[root@k8s-vm1 ~]# kubectl describe pod kube-flannel-p1vn4 --namespace=kube-system | grep ID
 Container ID: docker://885a18a9e96e9d56f04eb2613b5a4378f660152db9a24b5a12af7b009ef30d37
 Image ID: docker-pullable://quay.io/coreos/flannel@sha256:5fa9435c1e95be2ec4daa53a35c39d5e3cc99fce33ed4983f4bb707bc9fc175f
 Container ID: docker://e4680b90a2d5d9385770249a39f86f7852d120e9dd8b4d1631932914c49f9828
 Image ID: docker-pullable://quay.io/coreos/flannel-cni@sha256:77bf1017845afb65e2603d8573e9a2d649eb645a4f7fe4843f17e276b8126968
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;replication-controller&quot;&gt;Replication controller&lt;/h3&gt;

&lt;p&gt;Сущность, отвечающая за поддержание заданного количества реплик pod в рабочем состоянии. Также обеспечивает функционал rolling updates. При отклонении от заданного количества pod, реплики терминируются, либо создаются недостающие.&lt;/p&gt;

&lt;p&gt;Пример конфигурации replication controller в формате yaml:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: v1
kind: ReplicationController
metadata:
  name: nginx
spec:
  replicas: 4
  selector:
    app: nginx
  template:
    metadata:
      name: nginx
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;service&quot;&gt;Service&lt;/h3&gt;

&lt;p&gt;Основная роль service - обеспечение доступности логической группы pod для внешних подключений. Пример конфигурации сервиса для replication controller приведенного выше в формате yaml (доступность на двух внешних IP 10.200.33.12 и 10.200.33.13, порт 8001):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kind: Service
apiVersion: v1
metadata:
   name: nginx
spec:
   externalIPs:
     - 10.200.33.12
     - 10.200.33.13
   selector:
     app: nginx
   ports:
   - protocol: TCP
     port: 8001
     targetPort: 80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Docker Swarm CheatSheet</title>
   <link href="http://localhost:4000/docker-swarm-cheatsheet"/>
   <updated>2017-10-03T00:00:00-04:00</updated>
   <id>http://localhost:4000/docker-swarm-cheatsheet</id>
   <content type="html">&lt;h2 id=&quot;содержание&quot;&gt;Содержание&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/docker-swarm-cheatsheet#Установка&quot;&gt;Установка&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/docker-swarm-cheatsheet#Использование&quot;&gt;Использование&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;/docker-swarm-cheatsheet#Использование-docker-config&quot;&gt;Использование docker config&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;установка-&quot;&gt;Установка &lt;a name=&quot;Установка&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; yum-utils device-mapper-persistent-data lvm2
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum-config-manager &lt;span class=&quot;nt&quot;&gt;--add-repo&lt;/span&gt; https://download.docker.com/linux/centos/docker-ce.repo
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum makecache fast
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;docker-ce &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;docker
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl start docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;!---excerpt-break--&gt;
&lt;h2 id=&quot;использование-&quot;&gt;Использование &lt;a name=&quot;Использование&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&quot;инициализация-кластера&quot;&gt;Инициализация кластера&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker swarm init &lt;span class=&quot;nt&quot;&gt;--advertise-addr&lt;/span&gt; 10.10.10.101
Swarm initialized: current node &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;siubj077zvc6bbxb9l2alr0up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is now a manager.
To add a worker to this swarm, run the following &lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;:
   docker swarm &lt;span class=&quot;nb&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--token&lt;/span&gt; SWMTKN-1-0lx3v80ql0bqy508rxaqo0x6sseokwzgd9brj902bif0ylbv6y-47on62zw39p154yfeu5ihfs3g 10.10.10.101:2377
To add a manager to this swarm, run &lt;span class=&quot;s1&quot;&gt;'docker swarm join-token manager'&lt;/span&gt; and follow the instructions.

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker node &lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;ID HOSTNAME STATUS AVAILABILITY MANAGER STATUS
ad3rwed27xksrkhpmlktf4aco vm3.home Ready Active 
ka75127cw1pc1t6gnxm1cffs9 vm2.home Ready Active 
siubj077zvc6bbxb9l2alr0up &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; vm1.home Ready Active Leader
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;разворачивание-сервиса&quot;&gt;Разворачивание сервиса:&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker service create --replicas 3 --name helloworld alpine ping docker.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Если параметр replicas больше, чем количество нод в кластере swarm  - на некоторых нодах будет создан более чем один контейнер.&lt;/p&gt;
&lt;h4 id=&quot;удаление-сервиса&quot;&gt;Удаление сервиса:&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker service rm helloworld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;При создании кластера swarm автоматически создается оверлейная vxlan сеть для связи контейнеров внутри нод.&lt;/p&gt;
&lt;h4 id=&quot;увеличение-количества-запущенных-контейнеров-для-сервиса&quot;&gt;Увеличение количества запущенных контейнеров для сервиса:&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker service scale helloworld=10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;информация-о-контейнерах-сервиса&quot;&gt;Информация о контейнерах сервиса:&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker service ps helloworld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;перевод-ноды-в-режим-обслуживания-активные-контейнеры-будут-развернуты-на-других-нодах&quot;&gt;Перевод ноды в режим обслуживания (активные контейнеры будут развернуты на других нодах):&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker node update --availability drain vm2.home
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Также реплика контейнера будет создана в случае каких-то проблем с нодой (например, ее перезагрузка).&lt;/p&gt;
&lt;h4 id=&quot;возврат-ноды-из-режима-обслуживания-контейнеры-не-возвращаются-на-ноду-автоматически&quot;&gt;Возврат ноды из режима обслуживания (контейнеры не возвращаются на ноду автоматически):&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker node update --availability active vm2.home
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;перебалансировка-контейнеров-по-всем-активным-нодам-пересоздает-контейнеры-ведет-к-прерыванию-связи&quot;&gt;Перебалансировка контейнеров по всем активным нодам (пересоздает контейнеры, ведет к прерыванию связи):&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker service update helloworld --force
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;задание-лимита-на-хранение-выключенных-копий-контейнеров-вида-_helloworld&quot;&gt;Задание лимита на хранение выключенных копий контейнеров вида _helloworld:&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker swarm update --task-history-limit 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;использование-docker-config-&quot;&gt;Использование docker config &lt;a name=&quot;Использование-docker-config&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;my.conf 
 server &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    listen 80&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server_name localhost&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    location / &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        proxy_pass http://127.0.0.1:80/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;создание-файла-конфигурации&quot;&gt;Создание файла конфигурации:&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker config create my_nginx_conf my.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;создание-сервиса-с-файлом-конфигурации&quot;&gt;Создание сервиса с файлом конфигурации:&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker service create --name nginx_with_my_conf --replicas 3 --config source=my_nginx_conf,target=/etc/nginx/conf.d/my.conf nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;проверка-на-одном-из-worker&quot;&gt;Проверка на одном из worker:&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ti&lt;/span&gt; c7317bf582bf &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /etc/nginx/conf.d/my.conf
 server &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    listen 80&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server_name localhost&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    location / &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        proxy_pass http://127.0.0.1:80/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Basic TCP</title>
   <link href="http://localhost:4000/basic-tcp"/>
   <updated>2017-10-03T00:00:00-04:00</updated>
   <id>http://localhost:4000/basic-tcp</id>
   <content type="html">&lt;h2 id=&quot;содержание&quot;&gt;Содержание&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/basic-tcp#Терминология&quot;&gt;Терминология&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/basic-tcp#Установка-TCP-соединения&quot;&gt;Установка TCP соединения&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;/basic-tcp#3-Way-Handshake&quot;&gt;3-Way Handshake&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/basic-tcp#Создание-сегмента-TCP&quot;&gt;Создание сегмента TCP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;терминология-&quot;&gt;Терминология &lt;a name=&quot;Терминология&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;TCB&lt;/strong&gt; - блок памяти, выделенный CPU для обработки информации одной TCP сессии. Содержит информацию о сокете и состоянии сессии;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Socket&lt;/strong&gt; - набор src IP, src port, dst IP, dst port;&lt;/p&gt;

&lt;p&gt;Возможны два способа создания TCB :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Active open&lt;/strong&gt; - создается на клиенте, когда приложение запрашивает сокет. Далее случайным образом создается Initial Sequence Number (ISN) и отправляется SYN;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Passive open&lt;/strong&gt; - создается на сервере для дальнейших нужд (“in advance”). В сокете предопределены src IP и src Port (частичный сокет) + ISN. В режиме passive open как правило создаются несколько TCB.
&lt;!---excerpt-break--&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;установка-tcp-соединения-&quot;&gt;Установка TCP соединения &lt;a name=&quot;Установка-TCP-соединения&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&quot;3-way-handshake-&quot;&gt;3-Way Handshake &lt;a name=&quot;3-Way-Handshake&quot;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Клиент создает TCB в режиме Active Open;&lt;/li&gt;
  &lt;li&gt;Клиент отправляет SYN (x);&lt;/li&gt;
  &lt;li&gt;На сервере TCB уже создан в режиме Passive Open;&lt;/li&gt;
  &lt;li&gt;Сервер получает SYN (x);&lt;/li&gt;
  &lt;li&gt;Сервер генерирует SYN (y) и ACK (x+1) и отправляет клиенту;&lt;/li&gt;
  &lt;li&gt;Клиент получает SYN (y) и отправляет ACK (y+1)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;После этого соединения считается установленным.&lt;/p&gt;

&lt;p&gt;Иногда используется 4-way handshake (2 хоста в режиме Active Open):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Параллельно генерируются два SYN c разных сторон с разными ISN;&lt;/li&gt;
  &lt;li&gt;Также параллельно отправляются два ACK с разными ISN+1;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;создание-сегмента-tcp-&quot;&gt;Создание сегмента TCP &lt;a name=&quot;Создание-сегмента-TCP&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;TCP может принимать от приложения блоки данных, либо непрерывный поток. Его задача – разбить принимаемые данные на сегменты.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ru.wikipedia.org/wiki/Алгоритм_Нейгла&quot;&gt;Алгоритм Нейгла&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Идея заключается в том, что наполнение сегмента происходит до тех пор, пока от принимающей стороны не пришел ACK о получении предыдущего сегмента. При этом существует максимальный размер сегмента, при достижении которого начинается наполнение следующего сегмента, а полный отправляется.&lt;/p&gt;

&lt;p&gt;Существует возможность отключения алгоритма Нейгла, при этом данные отправляются в сеть сразу при их получении от приложения (опция TCP_NODELAY).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MSS&lt;/strong&gt; - Maximum Segment Size. Согласуется при handshake. Обычно определяется на основе L2 MTU. Стандартный MSS - 1460 (1460 MSS + 20 IP + 20 TCP = 1500 MTU).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Window Size&lt;/strong&gt; - максимальное количество сегментов (в байтах) , которое можно отправить без получения ACK. Динамически изменяется в процессе передачи данных. Максимальный размер окна TCP - 65535 байт. Также используется параметр Windows Scale (Window Scaling Factor), который позволяет расширить максимальный размер окна.&lt;/p&gt;

&lt;p&gt;Клиент при отправке данных сравнивает свой и чужой Window Size и выбирает меньший из них.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Basic OSPF</title>
   <link href="http://localhost:4000/basic-ospf"/>
   <updated>2017-10-03T00:00:00-04:00</updated>
   <id>http://localhost:4000/basic-ospf</id>
   <content type="html">&lt;h2 id=&quot;содержание&quot;&gt;Содержание&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/basic-ospf#типы-пакетов-OSPF&quot;&gt;Типы пакетов OSPF&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/basic-ospf#типы-LSA&quot;&gt;Типы LSA&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/basic-ospf#типы-area&quot;&gt;Типы area&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;OSPF - Link-State протокол маршрутизации (для inter-area характерно поведение Distance Vector протоколов).&lt;/p&gt;

&lt;p&gt;Использует &lt;a href=&quot;https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm&quot;&gt;алгоритм Дейкстры&lt;/a&gt; для поиска кратчайшего пути к вершинам графа от исходной вершины (от маршрутизатора, совершающего расчет, к остальным маршрутизаторам, участвующим в процессе OSPF).&lt;/p&gt;

&lt;p&gt;Основной RFC по OSPFv2 - &lt;a href=&quot;https://tools.ietf.org/html/rfc2328&quot;&gt;RFC 2328&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;типы-пакетов-ospf-&quot;&gt;Типы пакетов OSPF &lt;a name=&quot;типы-пакетов-OSPF&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Существует 5 типов пакетов OSPF:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hello&lt;/li&gt;
  &lt;li&gt;Database Description&lt;/li&gt;
  &lt;li&gt;Link State Request&lt;/li&gt;
  &lt;li&gt;Link State Update&lt;/li&gt;
  &lt;li&gt;Link State Acknowledgment&lt;/li&gt;
&lt;/ul&gt;

&lt;!---excerpt-break--&gt;

&lt;p&gt;Общий заголовок для всех типов пакетов:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Version #   |     Type      |         Packet length         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                          Router ID                            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                           Area ID                             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           Checksum            |             AuType            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       Authentication                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       Authentication                          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;hello&quot;&gt;Hello&lt;/h3&gt;

&lt;p&gt;Пакет, периодически рассылающийся через все интерфейсы для установления и поддержки отношений соседства. Период рассылки устанавливается параметром HelloInterval.&lt;/p&gt;

&lt;h3 id=&quot;database-description-dbd&quot;&gt;Database Description (DBD)&lt;/h3&gt;

&lt;p&gt;Пакет, содержащий описание LSDB маршрутизаторов. Первый DBD пакет отправляется master маршрутизатором, в ответ от slave маршрутизатора приходит DBD с аналогичным sequence number, расцениваемый как acknowledge.&lt;/p&gt;

&lt;h3 id=&quot;link-state-request-lsr&quot;&gt;Link State Request (LSR)&lt;/h3&gt;

&lt;p&gt;Пакет используется после синхронизации LSDB между маршрутизаторами для запроса отдельных LSA.&lt;/p&gt;

&lt;h3 id=&quot;link-state-update-lsu&quot;&gt;Link State Update (LSU)&lt;/h3&gt;

&lt;p&gt;Пакеты подобного типа используются для ответа на LSR (unicast destination), либо для распространения новых LSA (224.0.0.5 multicast destination). Содержат полное описание LSA.&lt;/p&gt;

&lt;h3 id=&quot;link-state-acknowledge-lsack&quot;&gt;Link State Acknowledge (LSAck)&lt;/h3&gt;

&lt;p&gt;LSAck отправляются в качестве подтверждения для полученных LSA (LSU). Существует два типа LSAck:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Пакеты отправляются сразу после получения LSU на unicast адрес отправителя;&lt;/li&gt;
  &lt;li&gt;Пакеты отправляются с некоторой задержкой на multicast адрес.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;типы-lsa-link-state-advertisement-&quot;&gt;Типы LSA (Link-State Advertisement) &lt;a name=&quot;типы-LSA&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&quot;lsa-type-1&quot;&gt;LSA Type 1&lt;/h3&gt;

&lt;p&gt;Router-LSAs - описывают набор интерфейсов каждого маршрутизатора в area. Распространяются только внутри area. Также содержат описание роли маршрутизатора:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bit V установлен - маршрутизатор терминирует Virtual-Links, для которых area, где сгенерирован LSA, выступает в качестве транзитной;&lt;/li&gt;
  &lt;li&gt;Bit E установлен - ASBR;&lt;/li&gt;
  &lt;li&gt;Bit B установлен - ABR.
&lt;img src=&quot;public/basic-ospf-img1.png&quot; alt=&quot;basic-ospf-img1&quot; width=&quot;70%&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Таблица возможных типов Link ID (&lt;a href=&quot;https://tools.ietf.org/html/rfc2328#page-128&quot;&gt;RFC 2328&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Link type   Description       Link ID
__________________________________________________
1           Point-to-point    Neighbor Router ID
            link
2           Link to transit   Interface address of
            network           Designated Router
3           Link to stub      IP network number
            network

4           Virtual link      Neighbor Router ID
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Link-State ID для LSA Type 1 - Router ID.&lt;/p&gt;

&lt;p&gt;Пример Router-LSA:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vIOS1#sh ip ospf database router 10.0.0.1

OSPF Router with ID (10.0.0.1) (Process ID 1)

Router Link States (Area 0)

LS age: 533
 Options: (No TOS-capability, DC)
 LS Type: Router Links
 Link State ID: 10.0.0.1
 Advertising Router: 10.0.0.1
 LS Seq Number: 80000004
 Checksum: 0xB5FD
 Length: 60
 Number of Links: 3

Link connected to: a Stub Network
 (Link ID) Network/subnet number: 10.0.0.1
 (Link Data) Network Mask: 255.255.255.255
 Number of MTID metrics: 0
 TOS 0 Metrics: 1

Link connected to: a Transit Network
 (Link ID) Designated Router address: 10.1.2.1
 (Link Data) Router Interface address: 10.1.2.1
 Number of MTID metrics: 0
 TOS 0 Metrics: 1

Link connected to: a Transit Network
 (Link ID) Designated Router address: 10.1.3.1
 (Link Data) Router Interface address: 10.1.3.1
 Number of MTID metrics: 0
 TOS 0 Metrics: 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;LSA Type 1 в дампе пакета LS Update:
&lt;img src=&quot;public/basic-ospf-img3.png&quot; alt=&quot;basic-ospf-img3&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;lsa-type-2&quot;&gt;LSA Type 2&lt;/h3&gt;

&lt;p&gt;Network-LSAs - содержат описание маршрутизаторов, присоединенных к определенной сети. Рассылаются DR внутри area в broadcast и NBMA сетях. Генерируются для каждой транзитной (Type 2 в Router-LSA) сети.&lt;/p&gt;

&lt;p&gt;Link-State ID для LSA Type 2 - адрес DR.&lt;/p&gt;

&lt;p&gt;Пример Network-LSA:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vIOS2#sh ip ospf database network 10.2.3.3

OSPF Router with ID (10.0.0.2) (Process ID 1)

Net Link States (Area 0)

LS age: 68
 Options: (No TOS-capability, DC)
 LS Type: Network Links
 Link State ID: 10.2.3.3 (address of Designated Router)
 Advertising Router: 10.0.0.3
 LS Seq Number: 80000003
 Checksum: 0x44BB
 Length: 32
 Network Mask: /24
 Attached Router: 10.0.0.3
 Attached Router: 10.0.0.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;LSA Type 2 в дампе пакета LS Update:
&lt;img src=&quot;public/basic-ospf-img4.png&quot; alt=&quot;basic-ospf-img4&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;lsa-type-3&quot;&gt;LSA Type 3&lt;/h3&gt;

&lt;p&gt;Summary-LSAs - содержат описание маршрутов в другие area. Рассылаются ABR внутри area. В backbone area с ABR анонсируются только intra-area маршруты, в non-backbone area с ABR анонсируются как intra-area, так и inter-area маршруты.&lt;/p&gt;

&lt;p&gt;При получении LSA Type 3 маршрутизатором, алгоритм SPF не запускается, стоимость маршрута указанного в LSA добавляется к стоимости маршрута до ABR.&lt;/p&gt;

&lt;p&gt;Link-State ID для LSA Type 3 - адрес сети, описанной в LSA.&lt;/p&gt;

&lt;p&gt;Пример Summary-LSA:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vIOS1#sh ip ospf database summary 10.0.0.6

OSPF Router with ID (10.0.0.1) (Process ID 1)

Summary Net Link States (Area 0)

LS age: 44
 Options: (No TOS-capability, DC, Upward)
 LS Type: Summary Links(Network)
 Link State ID: 10.0.0.6 (summary Network Number)
 Advertising Router: 10.0.0.2
 LS Seq Number: 80000001
 Checksum: 0x78A6
 Length: 28
 Network Mask: /32
 MTID: 0 Metric: 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;LSA Type 3 в дампе пакета LS Update:
&lt;img src=&quot;public/basic-ospf-img5.png&quot; alt=&quot;basic-ospf-img5&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;lsa-type-4&quot;&gt;LSA Type 4&lt;/h3&gt;

&lt;p&gt;ASBR-summary-LSAs - содержат адрес ASBR, находящегося в другой area. Рассылаются ABR внутри area.&lt;/p&gt;

&lt;p&gt;Link-State ID для LSA Type 4 - router ID описанного в LSA ASBR.&lt;/p&gt;

&lt;p&gt;Пример ASBR-summary-LSA:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vIOS1#sh ip ospf data asbr-summary 100.0.0.7

OSPF Router with ID (10.0.0.1) (Process ID 1)

Summary ASB Link States (Area 0)

LS age: 64
 Options: (No TOS-capability, DC, Upward)
 LS Type: Summary Links(AS Boundary Router)
 Link State ID: 100.0.0.7 (AS Boundary Router address)
 Advertising Router: 10.0.0.2
 LS Seq Number: 80000001
 Checksum: 0xC9F8
 Length: 28
 Network Mask: /0
 MTID: 0 Metric: 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;LSA Type 4 в дампе пакета LS Update:
&lt;img src=&quot;public/basic-ospf-img6.png&quot; alt=&quot;basic-ospf-img6&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;lsa-type-5&quot;&gt;LSA Type 5&lt;/h3&gt;

&lt;p&gt;AS-external-LSAs - содержат описание маршрутов, внешних по отношению к автономной системе (домену OSPF). Рассылаются ASBR по всей автономной системе (домену OSPF), исключая stub area’s. Также содержит следующие атрибуты:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;External Type Bit&lt;/strong&gt; - определяет тип external маршрута. Если бит не установлен - маршрут имеет тип E1, и к стоимости перераспределения прибавляется стоимость каналов до ASBR. Если бит установлен - маршрут имеет тип E2 и учитывается только стоимость перераспределения.&lt;/p&gt;

&lt;p&gt;Маршрут типа E1 при прочих равных (метрика может быть различной) имеет больший приоритет, чем маршрут типа E2. Если у маршрутизатора есть два одинаковых E2 маршрута от разных ASBR, в выборе лучшего будет учитываться метрика до самих ASBR.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Forwarding Address&lt;/strong&gt; - указывает через какой адрес доступен целевой маршрут. В случае, если данный маршрут доступен через самого ASBR в поле Forwarding Address указывается значение 0.0.0.0.&lt;/p&gt;

&lt;p&gt;Отличный от 0.0.0.0 Forwarding Address должен находиться в пределах автономной системы (домена OSPF).&lt;/p&gt;

&lt;p&gt;Link-State ID для LSA Type 5 - адрес сети, описанной в LSA.&lt;/p&gt;

&lt;p&gt;Пример AS-external-LSAs:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vIOS1#sh ip ospf database external 100.0.0.7

OSPF Router with ID (10.0.0.1) (Process ID 1)

Type-5 AS External Link States

LS age: 245
 Options: (No TOS-capability, DC, Upward)
 LS Type: AS External Link
 Link State ID: 100.0.0.7 (External Network Number )
 Advertising Router: 100.0.0.7
 LS Seq Number: 80000002
 Checksum: 0xD4F3
 Length: 36
 Network Mask: /32
 Metric Type: 2 (Larger than any link state path)
 MTID: 0 
 Metric: 20 
 Forward Address: 0.0.0.0
 External Route Tag: 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;LSA Type 5 в дампе пакета LS Update:
&lt;img src=&quot;public/basic-ospf-img7.png&quot; alt=&quot;basic-ospf-img7&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;lsa-type-7&quot;&gt;LSA Type 7&lt;/h3&gt;

&lt;p&gt;NSSA-external-LSAs. Описаны в &lt;a href=&quot;https://tools.ietf.org/html/rfc3101&quot;&gt;RFC 3101&lt;/a&gt;. Содержат информацию о внешних маршрутах с ASBR, расположенного в NSSA. Рассылаются ASBR в пределах NSSA.&lt;/p&gt;

&lt;p&gt;На ABR, граничащем с NSSA, происходит трансформация LSA Type 7 -&amp;gt; LSA Type 5. Маршрут по умолчанию, при его анонсе с ABR в NSSA, также имеет Type 7.&lt;/p&gt;

&lt;p&gt;Следует учитывать, что ABR в NSSA не генерируют Type 4 LSA для NSSA ASBR, так как LSA Type 7 не распространяются за пределы NSSA.&lt;/p&gt;

&lt;p&gt;Таким образом, для того, чтобы ASBR в NSSA был доступен из других area, поле Forwarding Address в LSA Type 7 должно быть не равным 0.0.0.0 (может быть 0.0.0.0, если P-bit не выставлен). ABR копирует значение данного поля из LSA Type 7 в LSA Type 5 (если Forwarding Adress равен 0.0.0.0, трансляции LSA Type 7 -&amp;gt; LSA Type 5 не происходит).&lt;/p&gt;

&lt;p&gt;LSA Type 7 содержит следующую дополнительную информацию:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;P-bit (Propagate) - указывает на то, должен ли LSA Type 7 быть преобразован на ABR в LSA Type 5 и распространен в остальные area.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Пример NSSA-external-LSA:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vIOS1#sh ip ospf database nssa-external 100.0.0.10

OSPF Router with ID (10.0.0.1) (Process ID 1)

Type-7 AS External Link States (Area 1910)

LS age: 464
 Options: (No TOS-capability, Type 7/5 translation, DC, Upward)
 LS Type: AS External Link
 Link State ID: 100.0.0.10 (External Network Number )
 Advertising Router: 100.0.0.10
 LS Seq Number: 80000001
 Checksum: 0xD98
 Length: 36
 Network Mask: /32
 Metric Type: 2 (Larger than any link state path)
 MTID: 0 
 Metric: 20 
 Forward Address: 10.0.0.10
 External Route Tag: 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;LSA Type 7 в дампе пакета LS Update:
&lt;img src=&quot;public/basic-ospf-img8.png&quot; alt=&quot;basic-ospf-img8&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;типы-area-&quot;&gt;Типы area &lt;a name=&quot;типы-area&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&quot;backbone-area&quot;&gt;Backbone area&lt;/h3&gt;

&lt;p&gt;Area 0.0.0.0. Все ABR находятся в backbone area. Также она отвечает за пересылку маршрутной информации между non-backbone area. Должна быть логически непрерывной (допускается использование virtual-links).&lt;/p&gt;

&lt;h3 id=&quot;standard-area&quot;&gt;Standard area&lt;/h3&gt;

&lt;p&gt;Стандартная area, не являющаяся backbone. При наличии в топологии только одной area - ее номер потенциально может быть любым (так как пересылка информации между area отсутствует).&lt;/p&gt;

&lt;h3 id=&quot;stub-area&quot;&gt;Stub area&lt;/h3&gt;

&lt;p&gt;Area, в которую запрещено распространение LSA Type 5. При этом на ABR внутрь area генерируется LSA Type 3 с маршрутом по умолчанию. Принадлежность к stub area должна быть включена на всех маршрутизаторах, входящих в данную area. Не может содержать ASBR. Сообщение при попытке сделать один из маршрутизаторов в stub area ASBR:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%OSPF-4-ASBR_WITHOUT_VALID_AREA: Router is currently an ASBR while having only one area which is a stub area
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;totally-stubby-area-cisco-only&quot;&gt;Totally stubby area (Cisco only)&lt;/h3&gt;

&lt;p&gt;Stub area, в которую не отправляются LSA Type 3 (только LSA с маршрутом 0.0.0.0, сгенерированная на ABR). Принадлежность area к totally stubby указывается на ABR (включение фильтрации LSA Type 3).&lt;/p&gt;

&lt;h3 id=&quot;not-so-stubby-area-nssa&quot;&gt;Not-so-stubby area (NSSA)&lt;/h3&gt;

&lt;p&gt;Описана в отдельном &lt;a href=&quot;https://tools.ietf.org/html/rfc3101&quot;&gt;RFC 3101&lt;/a&gt;. Stub-area, в которой может находиться ASBR. Принадлежность к NSSA должна быть включена на всех маршрутизаторах, входящих в данную area.&lt;/p&gt;

&lt;h3 id=&quot;totally-not-so-stubby-area-totally-nssa&quot;&gt;Totally not-so-stubby area (Totally NSSA)&lt;/h3&gt;

&lt;p&gt;NSSA, в которую не отправляются LSA Type 3 (только LSA с маршрутом 0.0.0.0, сгенерированная на ABR). Принадлежность area к totally NSSA указывается на ABR (включение фильтрации LSA Type 3).&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Weave</title>
   <link href="http://localhost:4000/weave"/>
   <updated>2017-10-02T00:00:00-04:00</updated>
   <id>http://localhost:4000/weave</id>
   <content type="html">&lt;h2 id=&quot;содержание&quot;&gt;Содержание&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/weave#Установка&quot;&gt;Установка&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;/weave#Weave-Scope&quot;&gt;Weave Scope&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/weave#Описание&quot;&gt;Описание&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/weave#Network-Policy&quot;&gt;Network Policy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;установка-&quot;&gt;Установка &lt;a name=&quot;Установка&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Для версии 1.7.5:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://cloud.weave.works/k8s/net?k8s-version&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.7.5
&lt;span class=&quot;nb&quot;&gt;cp &lt;/span&gt;net&lt;span class=&quot;se&quot;&gt;\?&lt;/span&gt;k8s-version&lt;span class=&quot;se&quot;&gt;\=&lt;/span&gt;1.7.5 weave-conf-1.7.5.yaml
weave-conf-1.7.5.yaml
      containers:
        - name: weave
          &lt;span class=&quot;nb&quot;&gt;env&lt;/span&gt;:
            - name: IPALLOC_RANGE
              value: 10.0.0.0/16 -&amp;gt; 172.25.64.0/18
kubectl apply &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; weave-conf-1.7.5.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;weave-scope-&quot;&gt;Weave Scope &lt;a name=&quot;Weave-Scope&quot;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Графическая среда мониторинга для сетевого модуля Weave. Может работать как в облаке cloud.weave.works так и в локальном k8s.&lt;/p&gt;

&lt;p&gt;Установка на локальный k8s:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://cloud.weave.works/k8s/scope.yaml?k8s-version&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.7.5
&lt;span class=&quot;nb&quot;&gt;cp &lt;/span&gt;scope.yaml?k8s-version&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.7.5 weave-scope-conf-1.7.5.yaml
    spec:
      externalIPs:
        - 10.200.33.12                
      ports:
        - name: app  
          port: 4040

kubectl apply &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt; kube-system &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; weave-scope-conf-1.7.5.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;!---excerpt-break--&gt;

&lt;h2 id=&quot;описание-&quot;&gt;Описание &lt;a name=&quot;Описание&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;По умолчанию контейнеры на всех хостах находятся в плоской сети (в примере 172.25.64.0/18). При этом на каждый хост выделяется свой диапазон адресов:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@k8s-vm1 ~]# ip addr | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;172.25
    inet 172.25.96.0/18 scope global weave
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@k8s-vm2 ~]# ip addr | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;172.25
    inet 172.25.120.0/18 scope global weave
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@k8s-vm3 ~]# ip addr | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;172.25
    inet 172.25.64.1/18 scope global weave
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@k8s-vm4 ~]# ip addr | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;172.25
    inet 172.25.88.0/18 scope global weave
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;network-policy-&quot;&gt;Network Policy &lt;a name=&quot;Network-Policy&quot;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Управление доступом в weave осуществляется с использованием iptables.&lt;/p&gt;

&lt;h3 id=&quot;пример-настройки-сетевых-политик&quot;&gt;Пример настройки сетевых политик&lt;/h3&gt;

&lt;p&gt;Запрет доступа в pod’ы, находящиеся в namespace prod с использованием аннотаций (implicit deny), аннотация в том числе запрещает доступ между pod в одном namespace:&lt;/p&gt;

&lt;h4 id=&quot;до-применения-аннотации&quot;&gt;До применения аннотации&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Chain WEAVE-NPC-DEFAULT &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 references&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
target     prot opt &lt;span class=&quot;nb&quot;&gt;source               &lt;/span&gt;destination
ACCEPT     all  &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;  anywhere             anywhere             match-set weave-z~y01unAQHA]WxHG!ALB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;5]&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;s dst /&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; DefaultAllow isolation &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;namespace: prod &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;запрет-с-использованием-аннотации&quot;&gt;Запрет с использованием аннотации&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl annotate ns prod net.beta.kubernetes.io/network-policy='{&quot;ingress&quot;:{&quot;isolation&quot;:&quot;DefaultDeny&quot;}}'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;удаление-запрета&quot;&gt;Удаление запрета&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl annotate ns prod net.beta.kubernetes.io/network-policy-
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Открытие internal доступа для определенного pod в namespace prod с определенного pod в namespace prod (пример для iperf-prod-1):&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;cat prod-net-policy.yaml&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;extensions/v1beta1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;NetworkPolicy&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;iperf-prod-1-internal-access&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;prod&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;podSelector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;iperf-prod-1&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ingress&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;podSelector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;iperf-prod-1&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;kubectl create -f prod-net-policy.yaml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Новая цепочка в iptables на всех нодах:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Chain WEAVE-NPC-INGRESS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 references&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
target     prot opt &lt;span class=&quot;nb&quot;&gt;source               &lt;/span&gt;destination         
ACCEPT     all  &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;  anywhere             anywhere             match-set weave-KD98A9:Wl|emmgZ&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;GX^J2yD&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;M src match-set weave-KD98A9:Wl|emmgZ&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;GX^J2yD&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;M dst /&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; pods: namespace: prod, selector: &lt;span class=&quot;nv&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;iperf-prod-1 -&amp;gt; pods: namespace: prod, selector: &lt;span class=&quot;nv&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;iperf-prod-1 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 

</feed>
